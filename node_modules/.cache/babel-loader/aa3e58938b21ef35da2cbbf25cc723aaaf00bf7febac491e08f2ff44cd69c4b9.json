{"ast":null,"code":"\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n  WS = WebSocket;\n  if (WS == null) {\n    throw new Error(\"inject please\");\n  }\n} catch (error) {\n  const logger = new Logger(version);\n  WS = function () {\n    logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n      operation: \"new WebSocket()\"\n    });\n  };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };","map":{"version":3,"names":["Logger","version","WS","WebSocket","Error","error","logger","throwError","errors","UNSUPPORTED_OPERATION","operation"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\providers\\src.ts\\browser-ws.ts"],"sourcesContent":["\"use strict\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\n\nlet WS: any = null;\n\ntry {\n    WS = (WebSocket as any);\n    if (WS == null) { throw new Error(\"inject please\"); }\n} catch (error) {\n    const logger = new Logger(version);\n    WS = function() {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    }\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,YAAY;AAEpC,IAAIC,EAAE,GAAQ,IAAI;AAElB,IAAI;EACAA,EAAE,GAAIC,SAAiB;EACvB,IAAID,EAAE,IAAI,IAAI,EAAE;IAAE,MAAM,IAAIE,KAAK,CAAC,eAAe,CAAC;;CACrD,CAAC,OAAOC,KAAK,EAAE;EACZ,MAAMC,MAAM,GAAG,IAAIN,MAAM,CAACC,OAAO,CAAC;EAClCC,EAAE,GAAG,SAAAA,CAAA;IACDI,MAAM,CAACC,UAAU,CAAC,8CAA8C,EAAEP,MAAM,CAACQ,MAAM,CAACC,qBAAqB,EAAE;MACnGC,SAAS,EAAE;KACd,CAAC;EACN,CAAC;;AAEL;AACA;AACA,SAASR,EAAE,IAAIC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _objectSpread from\"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _defineProperty from\"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import React,{useEffect,useState}from\"react\";import{ethers}from\"ethers\";import BigNumber from\"bignumber.js\";import{Container,Grid,IconButton,makeStyles,Paper,Typography}from\"@material-ui/core\";import SwapVerticalCircleIcon from\"@material-ui/icons/SwapVerticalCircle\";import{useSnackbar}from\"notistack\";import LoopIcon from\"@material-ui/icons/Loop\";import{getAmountOut,getBalanceAndSymbol,swapTokens,getReserves,getAllowance,approveToken}from\"../ethereumFunctions\";import CoinField from\"./CoinField\";import CoinDialog from\"./CoinDialog\";import LoadingButton from\"../Components/LoadingButton\";import WrongNetwork from\"../Components/wrongNetwork\";import{dogechainRouter}from\"../constants/chains\";import{DOGE,GRIMACE}from\"../constants/coins\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{allContainer:_defineProperty({display:'flex',flexDirection:'row',flexWrap:'wrap',alignItems:'center',padding:'0 20px',maxWidth:'1400px',margin:'0 auto',justifyContent:'center'},theme.breakpoints.down('md'),{flexDirection:'column-reverse'}),graph:{margin:'0 auto',border:'2px solid rgba(113, 83, 217, 1)',borderRadius:theme.spacing(2),maxWidth:'90vw'},paperContainer:_defineProperty({backgroundColor:'#2F2A70',borderRadius:theme.spacing(2),border:'2px solid rgba(113, 83, 217, 1)',padding:theme.spacing(3),paddingBottom:theme.spacing(3),color:'white'},theme.breakpoints.down('md'),{marginBottom:'100px'}),switchButton:{zIndex:1,margin:\"-16px\",padding:theme.spacing(0.5)},fullWidth:{width:\"100%\"},title:{textAlign:\"center\",padding:theme.spacing(0.5),marginBottom:theme.spacing(1)},hr:{width:\"100%\"},balance:{padding:theme.spacing(1),overflow:\"wrap\",textAlign:\"center\"},footer:{marginTop:\"285px\"}};};var useStyles=makeStyles(styles);function CoinSwapper(props){var classes=useStyles();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),approveIsRequired=_useState2[0],setApproveRequired=_useState2[1];var _useState3=useState('0'),_useState4=_slicedToArray(_useState3,2),priceImpact=_useState4[0],setPriceImpact=_useState4[1];// Stores a record of whether their respective dialog window is open\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),dialog1Open=_React$useState2[0],setDialog1Open=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),dialog2Open=_React$useState4[0],setDialog2Open=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,1),wrongNetworkOpen=_React$useState6[0];// Stores data about their respective coin\nvar _React$useState7=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState8=_slicedToArray(_React$useState7,2),coin1=_React$useState8[0],setCoin1=_React$useState8[1];var _React$useState9=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState10=_slicedToArray(_React$useState9,2),coin2=_React$useState10[0],setCoin2=_React$useState10[1];// Stores the current reserves in the liquidity pool between coin1 and coin2\nvar reverseDefaultValue='0.0';var _React$useState11=React.useState([reverseDefaultValue,reverseDefaultValue]),_React$useState12=_slicedToArray(_React$useState11,2),reserves=_React$useState12[0],setReserves=_React$useState12[1];// Stores the current value of their respective text box\nvar _React$useState13=React.useState(\"\"),_React$useState14=_slicedToArray(_React$useState13,2),field1Value=_React$useState14[0],setField1Value=_React$useState14[1];var _React$useState15=React.useState(\"\"),_React$useState16=_slicedToArray(_React$useState15,2),field2Value=_React$useState16[0],setField2Value=_React$useState16[1];// Controls the loading button\nvar _React$useState17=React.useState(false),_React$useState18=_slicedToArray(_React$useState17,2),loading=_React$useState18[0],setLoading=_React$useState18[1];// Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n// token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\nvar switchFields=function switchFields(){setCoin1(coin2);setCoin2(coin1);setField1Value(field2Value);setReserves(reserves.reverse());};// These functions take an HTML event, pull the data out and puts it into a state variable.\nvar handleChange={field1:function field1(e){setField1Value(e.target.value);}};// Turns the account's balance into something nice and readable\nvar formatBalance=function formatBalance(balance,symbol){if(balance&&symbol)return parseFloat(balance).toPrecision(8)+\" \"+symbol;else return\"0.0\";};// Turns the coin's reserves into something nice and readable\nvar formatReserve=function formatReserve(reserve,symbol){if(reserve&&symbol)return reserve+\" \"+symbol;else return\"0.0\";};// Determines whether the button should be enabled or not\nvar isButtonEnabled=function isButtonEnabled(){if(approveIsRequired)return true;// If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\nvar parsedInput1=parseFloat(field1Value);var parsedInput2=parseFloat(field2Value);return coin1.address&&coin2.address&&!isNaN(parsedInput1)&&!isNaN(parsedInput2)&&0<parsedInput1&&parsedInput1<=coin1.balance;};// Called when the dialog window for coin1 exits\nvar onToken1Selected=function onToken1Selected(address){// Close the dialog window\nsetDialog1Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin2.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1({address:address,symbol:data.symbol,balance:data.balance});if(props.network.weth.address!==address){getAllowance(address,props.network.account,dogechainRouter,props.network.signer).then(function(allowance){if(!allowance)return;setApproveRequired(allowance.lt(data.balanceRaw));});}});}};// Called when the dialog window for coin2 exits\nvar onToken2Selected=function onToken2Selected(address){// Close the dialog window\nsetDialog2Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin1.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2({address:address,symbol:data.symbol,balance:data.balance});});}};// Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\nvar swap=function swap(){console.log(\"Attempting to swap tokens...\");setLoading(true);if(approveIsRequired){return approveToken(coin1.address,dogechainRouter,props.network.signer).then(function(){setLoading(false);setApproveRequired(false);enqueueSnackbar(\"Approved\",{variant:\"success\"});}).catch(function(e){setLoading(false);enqueueSnackbar(\"Approve Failed (\"+e.message+\")\",{variant:\"error\",autoHideDuration:10000});});}swapTokens(coin1.address,coin2.address,field1Value,props.network.router,props.network.account,props.network.signer).then(function(){setLoading(false);// If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\nsetField1Value(\"\");enqueueSnackbar(\"Transaction Successful\",{variant:\"success\"});}).catch(function(e){setLoading(false);enqueueSnackbar(\"Transaction Failed (\"+e.message+\")\",{variant:\"error\",autoHideDuration:10000});});};// The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\n// are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\n// the lambda will only ever be called when the component mounts. These are very useful for calculating new values\n// after a particular state change, for example, calculating the new exchange rate whenever the addresses\n// of the two coins change.\n// This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n// This means that when the user selects a different coin to convert between, or the coins are swapped,\n// the new reserves will be calculated.\nuseEffect(function(){console.log(\"Trying to get Reserves between:\\n\"+coin1.address+\"\\n\"+coin2.address);if(coin1.address&&coin2.address){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){return setReserves(data);});}},[coin1.address,coin2.address,props.network.account,props.network.factory,props.network.router,props.network.signer]);// This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\n// It attempts to calculate and set the state variable `field2Value`\n// This means that if the user types a new value into the conversion box or the conversion rate changes,\n// the value in the output box will change.\nuseEffect(function(){if(isNaN(parseFloat(field1Value))){setField2Value(\"\");}else if(parseFloat(field1Value)&&coin1.address&&coin2.address){getAmountOut(coin1.address,coin2.address,field1Value,props.network.router,props.network.signer).then(function(amount){setField2Value(amount.toFixed(7));var inPoolSize=new BigNumber(ethers.utils.parseUnits(reserves[0],18).toString());var outPoolSize=new BigNumber(ethers.utils.parseUnits(reserves[1],18).toString());var inAmount=new BigNumber(ethers.utils.parseUnits(field1Value,18).toString());var proportionBefore=outPoolSize.div(inPoolSize);// console.log(`1 token per: [BEFORE] ${proportionBefore.toString()}`);\nvar constantProduct=inPoolSize.times(outPoolSize);var inPoolSizeAfter=inPoolSize.plus(inAmount);var outPoolSizeAfter=constantProduct.div(inPoolSizeAfter);var proportionAfter=outPoolSizeAfter.div(inPoolSizeAfter);// console.log(`1 token per [AFTER]: ${proportionAfter.toString()}`);\nvar differentAmount=proportionBefore.minus(proportionAfter);var differentPersentage=differentAmount.div(proportionBefore).times(100);setPriceImpact(differentPersentage.toFixed(2));}).catch(function(e){console.log(e);setField2Value(\"NA\");});}else{setField2Value(\"\");}},[field1Value,coin1.address,coin2.address,reserves]);// This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n// updated has changed. This allows them to see when a transaction completes by looking at the balance output.\nuseEffect(function(){var coinTimeout=setTimeout(function(){console.log('props: ',props);console.log(\"Checking balances...\");if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){return setReserves(data);});}if(coin1.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin1.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1(_objectSpread(_objectSpread({},coin1),{},{balance:data.balance}));});}if(coin2.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin2.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2(_objectSpread(_objectSpread({},coin2),{},{balance:data.balance}));});}},10000);return function(){return clearTimeout(coinTimeout);};});useEffect(function(){setCoin1(DOGE);setCoin2(GRIMACE);},[]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.allContainer,children:[/*#__PURE__*/_jsx(\"iframe\",{src:\"https://dexscreener.com/dogechain/0x1aAD352a2190B399Bb3cfD4d5E4B0bf6EFA33C0e?embed=1&theme=dark&trades=0&info=0\",title:\"MyFrame\",width:\"780px\",height:\"650px\",className:classes.graph}),/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",className:classes.swapContainer,children:/*#__PURE__*/_jsxs(Paper,{className:classes.paperContainer,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:classes.title,children:\"Swap Coins\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(CoinField,{activeField:true,value:field1Value,onClick:function onClick(){return setDialog1Open(true);},onChange:handleChange.field1,symbol:coin1.symbol!==undefined?coin1.symbol:\"Select\"})}),/*#__PURE__*/_jsx(IconButton,{onClick:switchFields,className:classes.switchButton,children:/*#__PURE__*/_jsx(SwapVerticalCircleIcon,{fontSize:\"medium\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(CoinField,{activeField:false,value:field2Value,onClick:function onClick(){return setDialog2Open(true);},symbol:coin2.symbol!==undefined?coin2.symbol:\"Select\"})}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Your Balances\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(coin1.balance,coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(coin2.balance,coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Reserves\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(reserves[0],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(reserves[1],coin2.symbol)})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:\"Price Impact:\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",className:classes.balance,children:[priceImpact,\"%\"]})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsxs(LoadingButton,{loading:loading,valid:isButtonEnabled(),success:false,fail:false,onClick:swap,children:[/*#__PURE__*/_jsx(LoopIcon,{}),approveIsRequired?\"Approve \".concat(coin1.symbol):\"swap\"]})]})]})})]});}export default CoinSwapper;","map":{"version":3,"names":["React","useEffect","useState","ethers","BigNumber","Container","Grid","IconButton","makeStyles","Paper","Typography","SwapVerticalCircleIcon","useSnackbar","LoopIcon","getAmountOut","getBalanceAndSymbol","swapTokens","getReserves","getAllowance","approveToken","CoinField","CoinDialog","LoadingButton","WrongNetwork","dogechainRouter","DOGE","GRIMACE","jsx","_jsx","jsxs","_jsxs","styles","theme","allContainer","_defineProperty","display","flexDirection","flexWrap","alignItems","padding","maxWidth","margin","justifyContent","breakpoints","down","graph","border","borderRadius","spacing","paperContainer","backgroundColor","paddingBottom","color","marginBottom","switchButton","zIndex","fullWidth","width","title","textAlign","hr","balance","overflow","footer","marginTop","useStyles","CoinSwapper","props","classes","_useSnackbar","enqueueSnackbar","_useState","_useState2","_slicedToArray","approveIsRequired","setApproveRequired","_useState3","_useState4","priceImpact","setPriceImpact","_React$useState","_React$useState2","dialog1Open","setDialog1Open","_React$useState3","_React$useState4","dialog2Open","setDialog2Open","_React$useState5","_React$useState6","wrongNetworkOpen","_React$useState7","address","undefined","symbol","_React$useState8","coin1","setCoin1","_React$useState9","_React$useState10","coin2","setCoin2","reverseDefaultValue","_React$useState11","_React$useState12","reserves","setReserves","_React$useState13","_React$useState14","field1Value","setField1Value","_React$useState15","_React$useState16","field2Value","setField2Value","_React$useState17","_React$useState18","loading","setLoading","switchFields","reverse","handleChange","field1","e","target","value","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput1","parsedInput2","isNaN","onToken1Selected","network","account","provider","signer","weth","coins","then","data","allowance","lt","balanceRaw","onToken2Selected","swap","console","log","variant","catch","message","autoHideDuration","router","factory","amount","toFixed","inPoolSize","utils","parseUnits","toString","outPoolSize","inAmount","proportionBefore","div","constantProduct","times","inPoolSizeAfter","plus","outPoolSizeAfter","proportionAfter","differentAmount","minus","differentPersentage","coinTimeout","setTimeout","_objectSpread","clearTimeout","className","children","src","height","swapContainer","container","direction","item","xs","activeField","onClick","onChange","fontSize","valid","success","fail","concat"],"sources":["D:/temki/grimace/GrimaceSwap/src/CoinSwapper/CoinSwapper.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport {\r\n  getAmountOut,\r\n  getBalanceAndSymbol,\r\n  swapTokens,\r\n  getReserves,\r\n  getAllowance,\r\n  approveToken\r\n} from \"../ethereumFunctions\";\r\nimport CoinField from \"./CoinField\";\r\nimport CoinDialog from \"./CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\nimport { dogechainRouter } from \"../constants/chains\";\r\nimport { DOGE, GRIMACE } from \"../constants/coins\";\r\n\r\nconst styles = (theme) => ({\r\n  allContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    maxWidth: '1400px',\r\n    margin: '0 auto',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  },\r\n  graph: {\r\n    margin: '0 auto',\r\n    border: '2px solid rgba(113, 83, 217, 1)',\r\n    borderRadius: theme.spacing(2),\r\n    maxWidth: '90vw'\r\n  },\r\n  paperContainer: {\r\n    backgroundColor: '#2F2A70',\r\n    borderRadius: theme.spacing(2),\r\n    border: '2px solid rgba(113, 83, 217, 1)',\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    color: 'white',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginBottom: '100px',\r\n    },\r\n  },\r\n  switchButton: {\r\n    zIndex: 1,\r\n    margin: \"-16px\",\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    marginTop: \"285px\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CoinSwapper(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [approveIsRequired, setApproveRequired] = useState(false);\r\n  const [priceImpact, setPriceImpact] = useState('0');\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const reverseDefaultValue = '0.0';\r\n  const [reserves, setReserves] = React.useState([reverseDefaultValue, reverseDefaultValue]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(field2Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n    if (approveIsRequired) return true;\r\n\r\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      !isNaN(parsedInput1) &&\r\n      !isNaN(parsedInput2) &&\r\n      0 < parsedInput1 &&\r\n      parsedInput1 <= coin1.balance\r\n    );\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n\r\n        if (props.network.weth.address !== address){\r\n          getAllowance(address, props.network.account, dogechainRouter, props.network.signer).then((allowance) => {\r\n            if (!allowance) return;\r\n  \r\n            setApproveRequired(allowance.lt(data.balanceRaw));\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\r\n  const swap = () => {\r\n    console.log(\"Attempting to swap tokens...\");\r\n    setLoading(true);\r\n\r\n    if (approveIsRequired){\r\n      return approveToken(\r\n        coin1.address, \r\n        dogechainRouter, \r\n        props.network.signer\r\n      ).then(() => {\r\n        setLoading(false);\r\n        setApproveRequired(false);\r\n        enqueueSnackbar(\"Approved\", { variant: \"success\" });\r\n      }).catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Approve Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n    }\r\n\r\n    swapTokens(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        enqueueSnackbar(\"Transaction Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Transaction Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\r\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\r\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\r\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\r\n  // of the two coins change.\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address) {\r\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(\r\n        (data) => setReserves(data)\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.router, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\r\n  // It attempts to calculate and set the state variable `field2Value`\r\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\r\n  // the value in the output box will change.\r\n  useEffect(() => {\r\n    if (isNaN(parseFloat(field1Value))) {\r\n      setField2Value(\"\");\r\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\r\n      getAmountOut(coin1.address, coin2.address, field1Value, props.network.router, props.network.signer).then(\r\n        (amount) => {\r\n          setField2Value(amount.toFixed(7));\r\n\r\n          const inPoolSize = new BigNumber(ethers.utils.parseUnits(reserves[0], 18).toString());\r\n          const outPoolSize = new BigNumber(ethers.utils.parseUnits(reserves[1], 18).toString());\r\n          const inAmount = new BigNumber(ethers.utils.parseUnits(field1Value, 18).toString());\r\n\r\n          const proportionBefore = outPoolSize.div(inPoolSize);\r\n  \r\n          // console.log(`1 token per: [BEFORE] ${proportionBefore.toString()}`);\r\n\r\n          const constantProduct = inPoolSize.times(outPoolSize);\r\n\r\n          const inPoolSizeAfter = inPoolSize.plus(inAmount);\r\n          const outPoolSizeAfter = constantProduct.div(inPoolSizeAfter)\r\n\r\n          const proportionAfter = outPoolSizeAfter.div(inPoolSizeAfter);\r\n\r\n          // console.log(`1 token per [AFTER]: ${proportionAfter.toString()}`);\r\n\r\n          const differentAmount = proportionBefore.minus(proportionAfter);\r\n          const differentPersentage = differentAmount.div(proportionBefore).times(100);\r\n\r\n          setPriceImpact(differentPersentage.toFixed(2));\r\n\r\n          \r\n        }).catch(e => {\r\n          console.log(e);\r\n          setField2Value(\"NA\");\r\n      })\r\n    } else {\r\n      setField2Value(\"\");\r\n    }\r\n  }, [field1Value, coin1.address, coin2.address, reserves]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log('props: ', props);\r\n      console.log(\"Checking balances...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => setReserves(data));\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n    useEffect(() => {\r\n    setCoin1(DOGE);\r\n    setCoin2(GRIMACE);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.allContainer}>\r\n      {/* Coin Swapper */}\r\n      <iframe \r\n          src=\"https://dexscreener.com/dogechain/0x1aAD352a2190B399Bb3cfD4d5E4B0bf6EFA33C0e?embed=1&theme=dark&trades=0&info=0\"\r\n          title=\"MyFrame\"\r\n          width=\"780px\"\r\n          height=\"650px\"  \r\n          className={classes.graph}           \r\n      ></iframe>\r\n      <Container maxWidth=\"xs\" className={classes.swapContainer}>\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Swap Coins\r\n          </Typography>\r\n\r\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={12} className={classes.fullWidth}>\r\n              <CoinField\r\n                activeField={true}\r\n                value={field1Value}\r\n                onClick={() => setDialog1Open(true)}\r\n                onChange={handleChange.field1}\r\n                symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n              />\r\n            </Grid>\r\n\r\n            <IconButton onClick={switchFields} className={classes.switchButton}>\r\n              <SwapVerticalCircleIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n\r\n            <Grid item xs={12} className={classes.fullWidth}>\r\n              <CoinField\r\n                activeField={false}\r\n                value={field2Value}\r\n                onClick={() => setDialog2Open(true)}\r\n                symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n              />\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Balance Display */}\r\n            <Typography variant=\"h6\">Your Balances</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(coin1.balance, coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(coin2.balance, coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Reserves Display */}\r\n            <Typography variant=\"h6\">Reserves</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(reserves[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(reserves[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            {/* Price Impact Display */}\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  Price Impact: \r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {priceImpact}%\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            <LoadingButton\r\n              loading={loading}\r\n              valid={isButtonEnabled()}\r\n              success={false}\r\n              fail={false}\r\n              onClick={swap}\r\n            >\r\n              <LoopIcon />\r\n              { approveIsRequired ? `Approve ${coin1.symbol}` : \"swap\" }\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoinSwapper;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
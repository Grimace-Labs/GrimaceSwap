{"ast":null,"code":"\"use strict\";\n\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar names = [\"wei\", \"kwei\", \"mwei\", \"gwei\", \"szabo\", \"finney\", \"ether\"];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n  var comps = String(value).split(\".\");\n  if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === \".\" || value === \"-.\") {\n    logger.throwArgumentError(\"invalid value\", \"value\", value);\n  }\n  // Make sure we have at least one whole digit (0 if none)\n  var whole = comps[0];\n  var negative = \"\";\n  if (whole.substring(0, 1) === \"-\") {\n    negative = \"-\";\n    whole = whole.substring(1);\n  }\n  // Make sure we have at least 1 whole digit with no leading zeros\n  while (whole.substring(0, 1) === \"0\") {\n    whole = whole.substring(1);\n  }\n  if (whole === \"\") {\n    whole = \"0\";\n  }\n  var suffix = \"\";\n  if (comps.length === 2) {\n    suffix = \".\" + (comps[1] || \"0\");\n  }\n  while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n    suffix = suffix.substring(0, suffix.length - 1);\n  }\n  var formatted = [];\n  while (whole.length) {\n    if (whole.length <= 3) {\n      formatted.unshift(whole);\n      break;\n    } else {\n      var index = whole.length - 3;\n      formatted.unshift(whole.substring(index));\n      whole = whole.substring(0, index);\n    }\n  }\n  return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n  if (typeof unitName === \"string\") {\n    var index = names.indexOf(unitName);\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n  return formatFixed(value, unitName != null ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n  if (typeof value !== \"string\") {\n    logger.throwArgumentError(\"value must be a string\", \"value\", value);\n  }\n  if (typeof unitName === \"string\") {\n    var index = names.indexOf(unitName);\n    if (index !== -1) {\n      unitName = 3 * index;\n    }\n  }\n  return parseFixed(value, unitName != null ? unitName : 18);\n}\nexport function formatEther(wei) {\n  return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n  return parseUnits(ether, 18);\n}","map":{"version":3,"names":["formatFixed","parseFixed","Logger","version","logger","names","commify","value","comps","String","split","length","match","throwArgumentError","whole","negative","substring","suffix","formatted","unshift","index","join","formatUnits","unitName","indexOf","parseUnits","formatEther","wei","parseEther","ether"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\units\\src.ts\\index.ts"],"sourcesContent":["\"use strict\";\n\nimport { BigNumber, BigNumberish } from \"@ethersproject/bignumber\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value: string | number): string {\n    const comps = String(value).split(\".\");\n\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") { whole = whole.substring(1); }\n    if (whole === \"\") { whole = \"0\"; }\n\n    let suffix = \"\";\n    if (comps.length === 2) { suffix = \".\" + (comps[1] || \"0\"); }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        } else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n\n    return negative + formatted.join(\",\") + suffix;\n}\n\nexport function formatUnits(value: BigNumberish, unitName?: string | BigNumberish): string {\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return formatFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function parseUnits(value: string, unitName?: BigNumberish): BigNumber {\n    if (typeof(value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof(unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) { unitName = 3 * index; }\n    }\n    return parseFixed(value, (unitName != null) ? unitName: 18);\n}\n\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\nexport function parseEther(ether: string): BigNumber {\n    return parseUnits(ether, 18);\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
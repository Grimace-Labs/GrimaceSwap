{"ast":null,"code":"var _jsxFileName = \"D:\\\\temki\\\\grimace\\\\GrimaceSwap\\\\src\\\\Liquidity\\\\LiquidityDeployer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport { useSnackbar } from \"notistack\";\nimport { getBalanceAndSymbol, getReserves } from \"../ethereumFunctions\";\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\nimport CoinField from \"../CoinSwapper/CoinField\";\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = theme => ({\n  paperContainer: {\n    borderRadius: theme.spacing(2),\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(3),\n    width: \"40%\",\n    overflow: \"wrap\",\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\n    color: \"white\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  values: {\n    width: \"50%\"\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1)\n  },\n  hr: {\n    width: \"100%\"\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\"\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1),\n    padding: theme.spacing(0.4)\n  }\n});\nconst useStyles = makeStyles(styles);\nfunction LiquidityDeployer(props) {\n  _s();\n  const classes = useStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Stores the user's balance of liquidity tokens for the current pair\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\n\n  // Used when getting a quote of liquidity\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    let oldField1Value = field1Value;\n    let oldField2Value = field2Value;\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setField1Value(oldField2Value);\n    setField2Value(oldField1Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: e => {\n      setField1Value(e.target.value);\n    },\n    field2: e => {\n      setField2Value(e.target.value);\n    }\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol) return parseFloat(balance).toPrecision(8) + \" \" + symbol;else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return coin1.address && coin2.address && parsedInput1 !== NaN && 0 < parsedInput1 && parsedInput2 !== NaN && 0 < parsedInput2 && parsedInput1 <= coin1.balance && parsedInput2 <= coin2.balance;\n  };\n  const deploy = () => {\n    console.log(\"Attempting to deploy liquidity...\");\n    setLoading(true);\n    addLiquidity(coin1.address, coin2.address, field1Value, field2Value, '0', '0', props.network.router, props.network.account, props.network.signer).then(() => {\n      setLoading(false);\n\n      // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n      setField1Value(\"\");\n      setField2Value(\"\");\n      enqueueSnackbar(\"Deployment Successful\", {\n        variant: \"success\"\n      });\n    }).catch(e => {\n      setLoading(false);\n      enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\n        variant: \"error\",\n        autoHideDuration: 10000\n      });\n    });\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = address => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance\n        });\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = address => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance\n        });\n      });\n    }\n  };\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address);\n    if (coin1.address && coin2.address && props.network.account) {\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(data => {\n        setReserves([data[0], data[1]]);\n        setLiquidityTokens(data[2]);\n      });\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\n  // It will give a preview of the liquidity deployment.\n  useEffect(() => {\n    if (isButtonEnabled()) {\n      console.log(\"Trying to preview the liquidity deployment\");\n      quoteAddLiquidity(coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer).then(data => {\n        // console.log(data);\n        console.log(\"TokenA in: \", data[0]);\n        console.log(\"TokenB in: \", data[1]);\n        console.log(\"Liquidity out: \", data[2]);\n        setLiquidityOut([data[0], data[1], data[2]]);\n      });\n    }\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log(\"Checking balances & Getting reserves...\");\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(data => {\n          setReserves([data[0], data[1]]);\n          setLiquidityTokens(data[2]);\n        });\n      }\n      if (coin1.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account, coin1.address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin1({\n            ...coin1,\n            balance: data.balance\n          });\n        });\n      }\n      if (coin2.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account, coin2.address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin2({\n            ...coin2,\n            balance: data.balance\n          });\n        });\n      }\n    }, 10000);\n    return () => clearTimeout(coinTimeout);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: classes.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinDialog, {\n      open: dialog1Open,\n      onClose: onToken1Selected,\n      coins: props.network.coins,\n      signer: props.network.signer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoinDialog, {\n      open: dialog2Open,\n      onClose: onToken2Selected,\n      coins: props.network.coins,\n      signer: props.networksigner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WrongNetwork, {\n      open: wrongNetworkOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.fullWidth,\n        children: /*#__PURE__*/_jsxDEV(CoinField, {\n          activeField: true,\n          value: field1Value,\n          onClick: () => setDialog1Open(true),\n          onChange: handleChange.field1,\n          symbol: coin1.symbol !== undefined ? coin1.symbol : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.fullWidth,\n        children: /*#__PURE__*/_jsxDEV(CoinField, {\n          activeField: true,\n          value: field2Value,\n          onClick: () => setDialog2Open(true),\n          onChange: handleChange.field2,\n          symbol: coin2.symbol !== undefined ? coin2.symbol : \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      spacing: 4,\n      className: classes.balance,\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.hr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        className: classes.values,\n        direction: \"column\",\n        alignItems: \"center\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Balances\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatBalance(coin1.balance, coin1.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatBalance(coin2.balance, coin2.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Reserves\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(reserves[0], coin1.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(reserves[1], coin2.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: classes.hr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Your Liquidity Pool Tokens\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              className: classes.balance,\n              children: formatReserve(liquidityTokens, \"UNI-V2\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperContainer,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          spacing: 2,\n          className: classes.fullWidth,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Tokens in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(liquidityOut[0], coin1.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(liquidityOut[1], coin2.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: classes.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Liquidity Pool Tokens Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatReserve(liquidityOut[2], \"UNI-V2\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: classes.hr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      alignItems: \"center\",\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n        loading: loading,\n        valid: isButtonEnabled(),\n        success: false,\n        fail: false,\n        onClick: deploy,\n        children: [/*#__PURE__*/_jsxDEV(AccountBalanceIcon, {\n          className: classes.buttonIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }, this), \"Deploy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 342,\n    columnNumber: 5\n  }, this);\n}\n_s(LiquidityDeployer, \"65hN20QFpg9Gm1CCRwPWqt27SRs=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n_c = LiquidityDeployer;\nexport default LiquidityDeployer;\nvar _c;\n$RefreshReg$(_c, \"LiquidityDeployer\");","map":{"version":3,"names":["React","useEffect","Grid","makeStyles","Paper","Typography","AccountBalanceIcon","useSnackbar","getBalanceAndSymbol","getReserves","addLiquidity","quoteAddLiquidity","CoinField","CoinDialog","LoadingButton","WrongNetwork","jsxDEV","_jsxDEV","styles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","width","overflow","background","color","fullWidth","values","title","textAlign","marginBottom","hr","balance","buttonIcon","marginRight","useStyles","LiquidityDeployer","props","_s","classes","enqueueSnackbar","dialog1Open","setDialog1Open","useState","dialog2Open","setDialog2Open","wrongNetworkOpen","setwrongNetworkOpen","coin1","setCoin1","address","undefined","symbol","coin2","setCoin2","reserves","setReserves","field1Value","setField1Value","field2Value","setField2Value","loading","setLoading","liquidityTokens","setLiquidityTokens","liquidityOut","setLiquidityOut","switchFields","oldField1Value","oldField2Value","reverse","handleChange","field1","e","target","value","field2","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput1","parsedInput2","NaN","deploy","console","log","network","router","account","signer","then","variant","catch","message","autoHideDuration","onToken1Selected","provider","weth","coins","data","onToken2Selected","factory","coinTimeout","setTimeout","clearTimeout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","open","onClose","networksigner","container","direction","alignItems","item","xs","activeField","onClick","onChange","justifyContent","valid","success","fail","_c","$RefreshReg$"],"sources":["D:/temki/grimace/GrimaceSwap/src/Liquidity/LiquidityDeployer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  getBalanceAndSymbol,\r\n  getReserves,\r\n} from \"../ethereumFunctions\";\r\n\r\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\r\n\r\nimport CoinField from \"../CoinSwapper/CoinField\";\r\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    paddingBottom: theme.spacing(3),\r\n    width: \"40%\",\r\n    overflow: \"wrap\",\r\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\r\n    color: \"white\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  values: {\r\n    width: \"50%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.4),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction LiquidityDeployer(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Stores the user's balance of liquidity tokens for the current pair\r\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\r\n\r\n  // Used when getting a quote of liquidity\r\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    let oldField1Value = field1Value;\r\n    let oldField2Value = field2Value;\r\n\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(oldField2Value);\r\n    setField2Value(oldField1Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n    field2: (e) => {\r\n      setField2Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      parsedInput1 !== NaN &&\r\n      0 < parsedInput1 &&\r\n      parsedInput2 !== NaN &&\r\n      0 < parsedInput2 &&\r\n      parsedInput1 <= coin1.balance &&\r\n      parsedInput2 <= coin2.balance\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const deploy = () => {\r\n    console.log(\"Attempting to deploy liquidity...\");\r\n    setLoading(true);\r\n\r\n    addLiquidity(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      field2Value,\r\n      '0',\r\n      '0',\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        setField2Value(\"\");\r\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(\r\n        props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address && props.network.account) {\r\n      getReserves(\r\n        coin1.address,\r\n        coin2.address,\r\n        props.network.factory,\r\n        props.network.signer,\r\n        props.network.account\r\n        ).then(\r\n        (data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        }\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\r\n  // It will give a preview of the liquidity deployment.\r\n  useEffect(() => {\r\n    if (isButtonEnabled()) {\r\n      console.log(\"Trying to preview the liquidity deployment\");\r\n\r\n      quoteAddLiquidity(\r\n        coin1.address,\r\n        coin2.address,\r\n        field1Value,\r\n        field2Value,\r\n        props.network.factory,\r\n        props.network.signer\r\n      ).then((data) => {\r\n        // console.log(data);\r\n        console.log(\"TokenA in: \", data[0]);\r\n        console.log(\"TokenB in: \", data[1]);\r\n        console.log(\"Liquidity out: \", data[2]);\r\n        setLiquidityOut([data[0], data[1], data[2]]);\r\n      });\r\n    }\r\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log(\"Checking balances & Getting reserves...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        });\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Liquidity deployer */}\r\n      <Typography variant=\"h5\" className={classes.title}></Typography>\r\n\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={props.network.coins}\r\n        signer={props.networksigner}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n      />\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field1Value}\r\n            onClick={() => setDialog1Open(true)}\r\n            onChange={handleChange.field1}\r\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field2Value}\r\n            onClick={() => setDialog2Open(true)}\r\n            onChange={handleChange.field2}\r\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        spacing={4}\r\n        className={classes.balance}\r\n      >\r\n        <hr className={classes.hr} />\r\n        <Grid\r\n          container\r\n          item\r\n          className={classes.values}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* Balance Display */}\r\n          <Typography variant=\"h6\">Your Balances</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin1.balance, coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin2.balance, coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Reserves Display */}\r\n          <Typography variant=\"h6\">Reserves</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[0], coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[1], coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Liquidity Tokens Display */}\r\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperContainer}>\r\n          {/*Red  Display to show the quote */}\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.fullWidth}\r\n          >\r\n            {/* Tokens in */}\r\n            <Typography variant=\"h6\">Tokens in</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Liquidity Tokens Display */}\r\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(liquidityOut[2], \"UNI-V2\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <hr className={classes.hr} />\r\n      </Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          valid={isButtonEnabled()}\r\n          success={false}\r\n          fail={false}\r\n          onClick={deploy}\r\n        >\r\n          <AccountBalanceIcon className={classes.buttonIcon} />\r\n          Deploy\r\n        </LoadingButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiquidityDeployer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
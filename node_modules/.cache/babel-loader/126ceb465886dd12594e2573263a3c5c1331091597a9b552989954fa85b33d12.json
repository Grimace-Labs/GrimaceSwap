{"ast":null,"code":"\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n  if (typeof hexString === 'string' && hexString.substring(0, 2) !== '0x') {\n    hexString = '0x' + hexString;\n  }\n  return arrayify(hexString);\n}\nexport function zpad(value, length) {\n  value = String(value);\n  while (value.length < length) {\n    value = '0' + value;\n  }\n  return value;\n}\nexport function getPassword(password) {\n  if (typeof password === 'string') {\n    return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n  }\n  return arrayify(password);\n}\nexport function searchPath(object, path) {\n  let currentChild = object;\n  const comps = path.toLowerCase().split('/');\n  for (let i = 0; i < comps.length; i++) {\n    // Search for a child object with a case-insensitive matching key\n    let matchingChild = null;\n    for (const key in currentChild) {\n      if (key.toLowerCase() === comps[i]) {\n        matchingChild = currentChild[key];\n        break;\n      }\n    }\n    // Didn't find one. :'(\n    if (matchingChild === null) {\n      return null;\n    }\n    // Now check this child...\n    currentChild = matchingChild;\n  }\n  return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n  const bytes = arrayify(randomBytes);\n  // Section: 4.1.3:\n  // - time_hi_and_version[12:16] = 0b0100\n  bytes[6] = bytes[6] & 0x0f | 0x40;\n  // Section 4.4\n  // - clock_seq_hi_and_reserved[6] = 0b0\n  // - clock_seq_hi_and_reserved[7] = 0b1\n  bytes[8] = bytes[8] & 0x3f | 0x80;\n  const value = hexlify(bytes);\n  return [value.substring(2, 10), value.substring(10, 14), value.substring(14, 18), value.substring(18, 22), value.substring(22, 34)].join(\"-\");\n}","map":{"version":3,"names":["arrayify","hexlify","toUtf8Bytes","UnicodeNormalizationForm","looseArrayify","hexString","substring","zpad","value","length","String","getPassword","password","NFKC","searchPath","object","path","currentChild","comps","toLowerCase","split","i","matchingChild","key","uuidV4","randomBytes","bytes","join"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\json-wallets\\src.ts\\utils.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, Bytes, BytesLike, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: Bytes | string): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\n\nexport function searchPath(object: any, path: string): string {\n    let currentChild = object;\n\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comps[i]) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = arrayify(randomBytes);\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,QAAQ,EAAoBC,OAAO,QAAQ,sBAAsB;AAC1E,SAASC,WAAW,EAAEC,wBAAwB,QAAQ,wBAAwB;AAE9E,OAAM,SAAUC,aAAaA,CAACC,SAAiB;EAC3C,IAAI,OAAOA,SAAU,KAAK,QAAQ,IAAIA,SAAS,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,EAAE;IACtED,SAAS,GAAG,IAAI,GAAGA,SAAS;;EAEhC,OAAOL,QAAQ,CAACK,SAAS,CAAC;AAC9B;AAEA,OAAM,SAAUE,IAAIA,CAACC,KAAsB,EAAEC,MAAc;EACvDD,KAAK,GAAGE,MAAM,CAACF,KAAK,CAAC;EACrB,OAAOA,KAAK,CAACC,MAAM,GAAGA,MAAM,EAAE;IAAED,KAAK,GAAG,GAAG,GAAGA,KAAK;;EACnD,OAAOA,KAAK;AAChB;AAEA,OAAM,SAAUG,WAAWA,CAACC,QAAwB;EAChD,IAAI,OAAOA,QAAS,KAAK,QAAQ,EAAE;IAC/B,OAAOV,WAAW,CAACU,QAAQ,EAAET,wBAAwB,CAACU,IAAI,CAAC;;EAE/D,OAAOb,QAAQ,CAACY,QAAQ,CAAC;AAC7B;AAEA,OAAM,SAAUE,UAAUA,CAACC,MAAW,EAAEC,IAAY;EAChD,IAAIC,YAAY,GAAGF,MAAM;EAEzB,MAAMG,KAAK,GAAGF,IAAI,CAACG,WAAW,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC;EAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACT,MAAM,EAAEY,CAAC,EAAE,EAAE;IAEnC;IACA,IAAIC,aAAa,GAAG,IAAI;IACxB,KAAK,MAAMC,GAAG,IAAIN,YAAY,EAAE;MAC3B,IAAIM,GAAG,CAACJ,WAAW,EAAE,KAAKD,KAAK,CAACG,CAAC,CAAC,EAAE;QAChCC,aAAa,GAAGL,YAAY,CAACM,GAAG,CAAC;QACjC;;;IAIT;IACA,IAAID,aAAa,KAAK,IAAI,EAAE;MACxB,OAAO,IAAI;;IAGf;IACAL,YAAY,GAAGK,aAAa;;EAGhC,OAAOL,YAAY;AACvB;AAEA;AACA,OAAM,SAAUO,MAAMA,CAACC,WAAsB;EACzC,MAAMC,KAAK,GAAG1B,QAAQ,CAACyB,WAAW,CAAC;EAEnC;EACA;EACAC,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;EAEnC;EACA;EACA;EACAA,KAAK,CAAC,CAAC,CAAC,GAAIA,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;EAEnC,MAAMlB,KAAK,GAAGP,OAAO,CAACyB,KAAK,CAAC;EAE5B,OAAO,CACJlB,KAAK,CAACF,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EACtBE,KAAK,CAACF,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACvBE,KAAK,CAACF,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACvBE,KAAK,CAACF,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACvBE,KAAK,CAACF,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CACzB,CAACqB,IAAI,CAAC,GAAG,CAAC;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}
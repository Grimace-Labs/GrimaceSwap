{"ast":null,"code":"var _jsxFileName = \"D:\\\\temki\\\\grimace\\\\GrimaceSwap\\\\src\\\\Components\\\\LoadingButton.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport green from \"@material-ui/core/colors/green\";\nimport red from \"@material-ui/core/colors/red\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    margin: 0,\n    position: \"relative\",\n    backgroundColor: 'rgba(113, 83, 217, 1)',\n    width: '100%'\n  },\n  progress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\nexport default function LoadingButton(props) {\n  _s();\n  const classes = useStyles();\n  const {\n    children,\n    loading,\n    valid,\n    success,\n    fail,\n    onClick,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"white\",\n      fullWidth: true,\n      disabled: loading || !valid,\n      type: \"submit\",\n      onClick: onClick,\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 24,\n      className: classes.progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadingButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = LoadingButton;\nvar _c;\n$RefreshReg$(_c, \"LoadingButton\");","map":{"version":3,"names":["React","Button","CircularProgress","makeStyles","green","red","jsxDEV","_jsxDEV","useStyles","theme","wrapper","margin","position","backgroundColor","width","progress","color","top","left","marginTop","marginLeft","LoadingButton","props","_s","classes","children","loading","valid","success","fail","onClick","other","className","variant","fullWidth","disabled","type","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["D:/temki/grimace/GrimaceSwap/src/Components/LoadingButton.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: 0,\r\n    position: \"relative\",\r\n    backgroundColor: 'rgba(113, 83, 217, 1)',\r\n    width:'100%'\r\n  },\r\n  progress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function LoadingButton(props) {\r\n  const classes = useStyles();\r\n  const { children, loading, valid, success, fail, onClick, ...other } = props;\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"white\"\r\n        fullWidth\r\n        disabled={loading || !valid}\r\n        type=\"submit\"\r\n        onClick={onClick}\r\n        {...other}\r\n      >\r\n        {children}\r\n      </Button>\r\n      {loading && <CircularProgress size={24} className={classes.progress} />}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,mBAAmB;AACxE,OAAOC,KAAK,MAAM,gCAAgC;AAClD,OAAOC,GAAG,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAK,KAAM;EACvCC,OAAO,EAAE;IACPC,MAAM,EAAE,CAAC;IACTC,QAAQ,EAAE,UAAU;IACpBC,eAAe,EAAE,uBAAuB;IACxCC,KAAK,EAAC;EACR,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAEZ,KAAK,CAAC,GAAG,CAAC;IACjBQ,QAAQ,EAAE,UAAU;IACpBK,GAAG,EAAE,KAAK;IACVC,IAAI,EAAE,KAAK;IACXC,SAAS,EAAE,CAAC,EAAE;IACdC,UAAU,EAAE,CAAC;EACf;AACF,CAAC,CAAC,CAAC;AAEH,eAAe,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC3C,MAAMC,OAAO,GAAGhB,SAAS,CAAC,CAAC;EAC3B,MAAM;IAAEiB,QAAQ;IAAEC,OAAO;IAAEC,KAAK;IAAEC,OAAO;IAAEC,IAAI;IAAEC,OAAO;IAAE,GAAGC;EAAM,CAAC,GAAGT,KAAK;EAC5E,oBACEf,OAAA;IAAKyB,SAAS,EAAER,OAAO,CAACd,OAAQ;IAAAe,QAAA,gBAC9BlB,OAAA,CAACN,MAAM;MACLgC,OAAO,EAAC,WAAW;MACnBjB,KAAK,EAAC,OAAO;MACbkB,SAAS;MACTC,QAAQ,EAAET,OAAO,IAAI,CAACC,KAAM;MAC5BS,IAAI,EAAC,QAAQ;MACbN,OAAO,EAAEA,OAAQ;MAAA,GACbC,KAAK;MAAAN,QAAA,EAERA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACRd,OAAO,iBAAInB,OAAA,CAACL,gBAAgB;MAACuC,IAAI,EAAE,EAAG;MAACT,SAAS,EAAER,OAAO,CAACT;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV;AAACjB,EAAA,CAnBuBF,aAAa;EAAA,QACnBb,SAAS;AAAA;AAAAkC,EAAA,GADHrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
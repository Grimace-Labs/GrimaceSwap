{"ast":null,"code":"import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nvar Zeros = new Uint8Array(32);\nZeros.fill(0);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n  try {\n    var comps = name.split(\".\");\n    for (var i = 0; i < comps.length; i++) {\n      if (nameprep(comps[i]).length === 0) {\n        throw new Error(\"empty\");\n      }\n    }\n    return true;\n  } catch (error) {}\n  return false;\n}\nexport function namehash(name) {\n  /* istanbul ignore if */\n  if (typeof name !== \"string\") {\n    logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n  }\n  var current = name;\n  var result = Zeros;\n  while (current.length) {\n    var partition = current.match(Partition);\n    if (partition == null || partition[2] === \"\") {\n      logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n    }\n    var label = toUtf8Bytes(nameprep(partition[3]));\n    result = keccak256(concat([result, keccak256(label)]));\n    current = partition[2] || \"\";\n  }\n  return hexlify(result);\n}","map":{"version":3,"names":["concat","hexlify","nameprep","toUtf8Bytes","keccak256","Logger","version","logger","Zeros","Uint8Array","fill","Partition","RegExp","isValidName","name","comps","split","i","length","Error","error","namehash","throwArgumentError","current","result","partition","match","label"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\ethers\\node_modules\\@ethersproject\\hash\\src.ts\\namehash.ts"],"sourcesContent":["import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\n\nexport function isValidName(name: string): boolean {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\")\n            }\n        }\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nexport function namehash(name: string): string {\n    /* istanbul ignore if */\n    if (typeof(name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n\n    let current = name;\n    let result: string | Uint8Array = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n\n        current = partition[2] || \"\";\n    }\n\n    return hexlify(result);\n}\n\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,OAAO,QAAQ,sBAAsB;AACtD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,wBAAwB;AAC9D,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,YAAY;AACpC,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAACC,OAAO,CAAC;AAElC,IAAME,KAAK,GAAG,IAAIC,UAAU,CAAC,EAAE,CAAC;AAChCD,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;AAEb,IAAMC,SAAS,GAAG,IAAIC,MAAM,CAAC,qBAAqB,CAAC;AAEnD,OAAM,SAAUC,WAAWA,CAACC,IAAY;EACpC,IAAI;IACA,IAAMC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACnC,IAAIf,QAAQ,CAACa,KAAK,CAACE,CAAC,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;QACjC,MAAM,IAAIC,KAAK,CAAC,OAAO,CAAC;;;IAGhC,OAAO,IAAI;GACd,CAAC,OAAOC,KAAK,EAAE;EAChB,OAAO,KAAK;AAChB;AAEA,OAAM,SAAUC,QAAQA,CAACP,IAAY;EACjC;EACA,IAAI,OAAOA,IAAK,KAAK,QAAQ,EAAE;IAC3BP,MAAM,CAACe,kBAAkB,CAAC,gCAAgC,EAAE,MAAM,EAAER,IAAI,CAAC;;EAG7E,IAAIS,OAAO,GAAGT,IAAI;EAClB,IAAIU,MAAM,GAAwBhB,KAAK;EACvC,OAAOe,OAAO,CAACL,MAAM,EAAE;IACnB,IAAMO,SAAS,GAAGF,OAAO,CAACG,KAAK,CAACf,SAAS,CAAC;IAC1C,IAAIc,SAAS,IAAI,IAAI,IAAIA,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1ClB,MAAM,CAACe,kBAAkB,CAAC,wCAAwC,EAAE,MAAM,EAAER,IAAI,CAAC;;IAErF,IAAMa,KAAK,GAAGxB,WAAW,CAACD,QAAQ,CAACuB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACjDD,MAAM,GAAGpB,SAAS,CAACJ,MAAM,CAAC,CAACwB,MAAM,EAAEpB,SAAS,CAACuB,KAAK,CAAC,CAAC,CAAC,CAAC;IAEtDJ,OAAO,GAAGE,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE;;EAGhC,OAAOxB,OAAO,CAACuB,MAAM,CAAC;AAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}
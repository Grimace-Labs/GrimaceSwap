{"ast":null,"code":"\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n  constructor(type, localName) {\n    super(type, type, localName, true);\n  }\n  defaultValue() {\n    return \"0x\";\n  }\n  encode(writer, value) {\n    value = arrayify(value);\n    let length = writer.writeValue(value.length);\n    length += writer.writeBytes(value);\n    return length;\n  }\n  decode(reader) {\n    return reader.readBytes(reader.readValue().toNumber(), true);\n  }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"bytes\", localName);\n  }\n  decode(reader) {\n    return reader.coerce(this.name, hexlify(super.decode(reader)));\n  }\n}","map":{"version":3,"names":["arrayify","hexlify","Coder","DynamicBytesCoder","constructor","type","localName","defaultValue","encode","writer","value","length","writeValue","writeBytes","decode","reader","readBytes","readValue","toNumber","BytesCoder","coerce","name"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\bytes.ts"],"sourcesContent":["\"use strict\";\n\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\n\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\n\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n\n\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,QAAQ,EAAEC,OAAO,QAAQ,sBAAsB;AAExD,SAASC,KAAK,QAAwB,kBAAkB;AAExD,OAAM,MAAOC,iBAAkB,SAAQD,KAAK;EACxCE,YAAYC,IAAY,EAAEC,SAAiB;IACxC,KAAK,CAACD,IAAI,EAAEA,IAAI,EAAEC,SAAS,EAAE,IAAI,CAAC;EACrC;EAEAC,YAAYA,CAAA;IACR,OAAO,IAAI;EACf;EAEAC,MAAMA,CAACC,MAAc,EAAEC,KAAU;IAC7BA,KAAK,GAAGV,QAAQ,CAACU,KAAK,CAAC;IACvB,IAAIC,MAAM,GAAGF,MAAM,CAACG,UAAU,CAACF,KAAK,CAACC,MAAM,CAAC;IAC5CA,MAAM,IAAIF,MAAM,CAACI,UAAU,CAACH,KAAK,CAAC;IAClC,OAAOC,MAAM;EACjB;EAEAG,MAAMA,CAACC,MAAc;IACjB,OAAOA,MAAM,CAACC,SAAS,CAACD,MAAM,CAACE,SAAS,EAAE,CAACC,QAAQ,EAAE,EAAE,IAAI,CAAC;EAChE;;AAGJ,OAAM,MAAOC,UAAW,SAAQhB,iBAAiB;EAC7CC,YAAYE,SAAiB;IACzB,KAAK,CAAC,OAAO,EAAEA,SAAS,CAAC;EAC7B;EAEAQ,MAAMA,CAACC,MAAc;IACjB,OAAOA,MAAM,CAACK,MAAM,CAAC,IAAI,CAACC,IAAI,EAAEpB,OAAO,CAAC,KAAK,CAACa,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC;EAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
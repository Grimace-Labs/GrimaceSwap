{"ast":null,"code":"import BN from 'bn.js';\nimport hash from 'hash.js';\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\nfunction createCommonjsModule(fn, basedir, module) {\n  return module = {\n    path: basedir,\n    exports: {},\n    require: function (path, base) {\n      return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n    }\n  }, fn(module, module.exports), module.exports;\n}\nfunction getDefaultExportFromNamespaceIfPresent(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\nfunction getDefaultExportFromNamespaceIfNotNamed(n) {\n  return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\nfunction getAugmentedNamespace(n) {\n  if (n.__esModule) return n;\n  var a = Object.defineProperty({}, '__esModule', {\n    value: true\n  });\n  Object.keys(n).forEach(function (k) {\n    var d = Object.getOwnPropertyDescriptor(n, k);\n    Object.defineProperty(a, k, d.get ? d : {\n      enumerable: true,\n      get: function () {\n        return n[k];\n      }\n    });\n  });\n  return a;\n}\nfunction commonjsRequire() {\n  throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\nvar minimalisticAssert = assert;\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};\nvar utils_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n  function toArray(msg, enc) {\n    if (Array.isArray(msg)) return msg.slice();\n    if (!msg) return [];\n    var res = [];\n    if (typeof msg !== 'string') {\n      for (var i = 0; i < msg.length; i++) res[i] = msg[i] | 0;\n      return res;\n    }\n    if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n      for (var i = 0; i < msg.length; i += 2) res.push(parseInt(msg[i] + msg[i + 1], 16));\n    } else {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi) res.push(hi, lo);else res.push(lo);\n      }\n    }\n    return res;\n  }\n  utils.toArray = toArray;\n  function zero2(word) {\n    if (word.length === 1) return '0' + word;else return word;\n  }\n  utils.zero2 = zero2;\n  function toHex(msg) {\n    var res = '';\n    for (var i = 0; i < msg.length; i++) res += zero2(msg[i].toString(16));\n    return res;\n  }\n  utils.toHex = toHex;\n  utils.encode = function encode(arr, enc) {\n    if (enc === 'hex') return toHex(arr);else return arr;\n  };\n});\nvar utils_1$1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var utils = exports;\n  utils.assert = minimalisticAssert;\n  utils.toArray = utils_1.toArray;\n  utils.zero2 = utils_1.zero2;\n  utils.toHex = utils_1.toHex;\n  utils.encode = utils_1.encode;\n\n  // Represent num in a w-NAF form\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    naf.fill(0);\n    var ws = 1 << w + 1;\n    var k = num.clone();\n    for (var i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n      naf[i] = z;\n      k.iushrn(1);\n    }\n    return naf;\n  }\n  utils.getNAF = getNAF;\n\n  // Represent k1, k2 in a Joint Sparse Form\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n      jsf[0].push(u1);\n      var u2;\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n      jsf[1].push(u2);\n\n      // Second phase\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n    return jsf;\n  }\n  utils.getJSF = getJSF;\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n  utils.cachedProperty = cachedProperty;\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n  utils.parseBytes = parseBytes;\n  function intFromLE(bytes) {\n    return new BN(bytes, 'hex', 'le');\n  }\n  utils.intFromLE = intFromLE;\n});\n'use strict';\nvar getNAF = utils_1$1.getNAF;\nvar getJSF = utils_1$1.getJSF;\nvar assert$1 = utils_1$1.assert;\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nvar base = BaseCurve;\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert$1(p.precomputed);\n  var doubles = p._getDoubles();\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n    if (i >= 0) l++;\n    acc = acc.dblp(l);\n    if (i < 0) break;\n    var z = naf[i];\n    assert$1(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n    var comb = [points[a], /* 1 */\n    null, /* 3 */\n    null, /* 5 */\n    points[b] /* 7 */];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n    var index = [-3, /* -1 -1 */\n    -1, /* -1 0 */\n    -5, /* -1 1 */\n    -7, /* 0 -1 */\n    0, /* 0 0 */\n    7, /* 0 1 */\n    5, /* 1 -1 */\n    1, /* 1 0 */\n    3 /* 1 1 */];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0) zero = false;\n      }\n      if (!zero) break;\n      k++;\n      i--;\n    }\n    if (i >= 0) k++;\n    acc = acc.dblp(k);\n    if (i < 0) break;\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n      if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++) wnd[i] = null;\n  if (jacobianResult) return acc;else return acc.toP();\n};\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\nBasePoint.prototype.eq = function eq( /*other*/\n) {\n  throw new Error('Not implemented');\n};\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils_1$1.toArray(bytes, enc);\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06) assert$1(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) assert$1(bytes[bytes.length - 1] % 2 === 1);\n    var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n  if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n  return [0x04].concat(x, this.getY().toArray('be', len));\n};\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils_1$1.encode(this._encode(compact), enc);\n};\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed) return this;\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n  return this;\n};\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed) return false;\n  var doubles = this.precomputed.doubles;\n  if (!doubles) return false;\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n  var doubles = [this];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++) acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n  var res = [this];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++) r = r.dbl();\n  return r;\n};\nvar inherits_browser = createCommonjsModule(function (module) {\n  if (typeof Object.create === 'function') {\n    // implementation from standard node.js 'util' module\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        ctor.prototype = Object.create(superCtor.prototype, {\n          constructor: {\n            value: ctor,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      }\n    };\n  } else {\n    // old school shim for old browsers\n    module.exports = function inherits(ctor, superCtor) {\n      if (superCtor) {\n        ctor.super_ = superCtor;\n        var TempCtor = function () {};\n        TempCtor.prototype = superCtor.prototype;\n        ctor.prototype = new TempCtor();\n        ctor.prototype.constructor = ctor;\n      }\n    };\n  }\n});\n'use strict';\nvar assert$2 = utils_1$1.assert;\nfunction ShortCurve(conf) {\n  base.call(this, 'short', conf);\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits_browser(ShortCurve, base);\nvar short_1 = ShortCurve;\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1) return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function (vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [l1, l2];\n};\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n  return [{\n    a: a1,\n    b: b1\n  }, {\n    a: a2,\n    b: b2\n  }];\n};\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return {\n    k1: k1,\n    k2: k2\n  };\n};\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red) x = x.toRed(this.red);\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0) throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd) y = y.redNeg();\n  return this.point(x, y);\n};\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf) return true;\n  var x = point.x;\n  var y = point.y;\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\nShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\nfunction Point(curve, x, y, isRed) {\n  base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits_browser(Point, base.BasePoint);\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo) return;\n  var pre = this.precomputed;\n  if (pre && pre.beta) return pre.beta;\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function (p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed) return [this.x, this.y];\n  return [this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  }];\n};\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string') obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2]) return res;\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [res].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [res].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf) return p;\n\n  // P + O = P\n  if (p.inf) return this;\n\n  // P + P = 2P\n  if (this.eq(p)) return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p)) return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0) return this.curve.point(null, null);\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0) c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\nPoint.prototype.dbl = function dbl() {\n  if (this.inf) return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0) return this.curve.point(null, null);\n  var a = this.curve.a;\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity()) return this;else if (this._hasDoubles(k)) return this.curve._fixedNafMul(this, k);else if (this.curve.endo) return this.curve._endoWnafMulAdd([this], [k]);else return this.curve._wnafMul(this, k);\n};\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs);else return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [this, p2];\n  var coeffs = [k1, k2];\n  if (this.curve.endo) return this.curve._endoWnafMulAdd(points, coeffs, true);else return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\nPoint.prototype.eq = function eq(p) {\n  return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf) return this;\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function (p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\nPoint.prototype.toJ = function toJ() {\n  if (this.inf) return this.curve.jpoint(null, null, null);\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\nfunction JPoint(curve, x, y, z) {\n  base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red) this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n  this.zOne = this.z === this.curve.one;\n}\ninherits_browser(JPoint, base.BasePoint);\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity()) return this.curve.point(null, null);\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n  return this.curve.point(ax, ay);\n};\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity()) return p;\n\n  // P + O = P\n  if (p.isInfinity()) return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity()) return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity()) return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0) return this.curve.jpoint(null, null, null);else return this.dbl();\n  }\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0) return this;\n  if (this.isInfinity()) return this;\n  if (!pow) return this.dbl();\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++) r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow) jz4 = jz4.redMul(jyd4);\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity()) return this;\n  if (this.curve.zeroA) return this._zeroDbl();else if (this.curve.threeA) return this._threeDbl();else return this._dbl();\n};\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA) return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n  return this.curve.jpoint(nx, ny, nz);\n};\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n  return this.curve._wnafMul(this, k);\n};\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine') return this.eq(p.toJ());\n  if (this === p) return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0) return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0) return true;\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0) return false;\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0) return true;\n  }\n};\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity()) return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) + ' y: ' + this.y.toString(16, 2) + ' z: ' + this.z.toString(16, 2) + '>';\n};\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\nvar curve_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curve = exports;\n  curve.base = base;\n  curve.short = short_1;\n  curve.mont = /*RicMoo:ethers:require(./mont)*/null;\n  curve.edwards = /*RicMoo:ethers:require(./edwards)*/null;\n});\nvar curves_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var curves = exports;\n  var assert = utils_1$1.assert;\n  function PresetCurve(options) {\n    if (options.type === 'short') this.curve = new curve_1.short(options);else if (options.type === 'edwards') this.curve = new curve_1.edwards(options);else this.curve = new curve_1.mont(options);\n    this.g = this.curve.g;\n    this.n = this.curve.n;\n    this.hash = options.hash;\n    assert(this.g.validate(), 'Invalid curve');\n    assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n  }\n  curves.PresetCurve = PresetCurve;\n  function defineCurve(name, options) {\n    Object.defineProperty(curves, name, {\n      configurable: true,\n      enumerable: true,\n      get: function () {\n        var curve = new PresetCurve(options);\n        Object.defineProperty(curves, name, {\n          configurable: true,\n          enumerable: true,\n          value: curve\n        });\n        return curve;\n      }\n    });\n  }\n  defineCurve('p192', {\n    type: 'short',\n    prime: 'p192',\n    p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n    b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n    n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012', '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811']\n  });\n  defineCurve('p224', {\n    type: 'short',\n    prime: 'p224',\n    p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n    a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n    b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n    n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21', 'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34']\n  });\n  defineCurve('p256', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n    a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n    b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n    n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296', '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5']\n  });\n  defineCurve('p384', {\n    type: 'short',\n    prime: null,\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 ffffffff',\n    a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'fffffffe ffffffff 00000000 00000000 fffffffc',\n    b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' + '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n    n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' + 'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n    hash: hash.sha384,\n    gRed: false,\n    g: ['aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' + '5502f25d bf55296c 3a545e38 72760ab7', '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' + '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f']\n  });\n  defineCurve('p521', {\n    type: 'short',\n    prime: null,\n    p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff',\n    a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff ffffffff ffffffff fffffffc',\n    b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' + '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' + '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n    n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' + 'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' + 'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n    hash: hash.sha512,\n    gRed: false,\n    g: ['000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' + '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' + 'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66', '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' + '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' + '3fad0761 353c7086 a272c240 88be9476 9fd16650']\n  });\n  defineCurve('curve25519', {\n    type: 'mont',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '76d06',\n    b: '1',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['9']\n  });\n  defineCurve('ed25519', {\n    type: 'edwards',\n    prime: 'p25519',\n    p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n    a: '-1',\n    c: '1',\n    // -121665 * (121666^(-1)) (mod P)\n    d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n    n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n    hash: hash.sha256,\n    gRed: false,\n    g: ['216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658']\n  });\n  var pre;\n  try {\n    pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/null.crash();\n  } catch (e) {\n    pre = undefined;\n  }\n  defineCurve('secp256k1', {\n    type: 'short',\n    prime: 'k256',\n    p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n    a: '0',\n    b: '7',\n    n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n    h: '1',\n    hash: hash.sha256,\n    // Precomputed endomorphism\n    beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n    lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n    basis: [{\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    }, {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }],\n    gRed: false,\n    g: ['79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798', '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8', pre]\n  });\n});\n'use strict';\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nvar hmacDrbg = HmacDRBG;\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000; // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac().update(this.V).update([0x00]);\n  if (seed) kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed) return;\n  this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n  this.V = this._hmac().update(this.V).digest();\n};\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n  entropy = utils_1.toArray(entropy, entropyEnc);\n  add = utils_1.toArray(add, addEnc);\n  minimalisticAssert(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils_1.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils_1.encode(res, enc);\n};\n'use strict';\nvar assert$3 = utils_1$1.assert;\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv) this._importPrivate(options.priv, options.privEnc);\n  if (options.pub) this._importPublic(options.pub, options.pubEnc);\n}\nvar key = KeyPair;\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair) return pub;\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair) return priv;\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n  if (pub.isInfinity()) return {\n    result: false,\n    reason: 'Invalid public key'\n  };\n  if (!pub.validate()) return {\n    result: false,\n    reason: 'Public key is not a point'\n  };\n  if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n    result: false,\n    reason: 'Public key * N != O'\n  };\n  return {\n    result: true,\n    reason: null\n  };\n};\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n  if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n  if (!enc) return this.pub;\n  return this.pub.encode(enc, compact);\n};\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n};\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert$3(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n      assert$3(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if (!pub.validate()) {\n    assert$3(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n'use strict';\nvar assert$4 = utils_1$1.assert;\nfunction Signature(options, enc) {\n  if (options instanceof Signature) return options;\n  if (this._importDER(options, enc)) return;\n  assert$4(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined) this.recoveryParam = null;else this.recoveryParam = options.recoveryParam;\n}\nvar signature = Signature;\nfunction Position() {\n  this.place = 0;\n}\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n  p.place = off;\n  return val;\n}\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils_1$1.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if (len + p.place !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n  return true;\n};\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push(len >>> (octets << 3) & 0xff);\n  }\n  arr.push(len);\n}\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80) r = [0].concat(r);\n  // Pad values\n  if (s[0] & 0x80) s = [0].concat(s);\n  r = rmPadding(r);\n  s = rmPadding(s);\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [0x02];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [0x30];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils_1$1.encode(res, enc);\n};\n'use strict';\nvar rand = /*RicMoo:ethers:require(brorand)*/function () {\n  throw new Error('unsupported');\n};\nvar assert$5 = utils_1$1.assert;\nfunction EC(options) {\n  if (!(this instanceof EC)) return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options), 'Unknown curve ' + options);\n    options = curves_1[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves_1.PresetCurve) options = {\n    curve: options\n  };\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nvar ec = EC;\nEC.prototype.keyPair = function keyPair(options) {\n  return new key(this, options);\n};\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return key.fromPrivate(this, priv, enc);\n};\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return key.fromPublic(this, pub, enc);\n};\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options) options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0) continue;\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0) msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n};\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options) options = {};\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new hmacDrbg({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n  for (var iter = 0;; iter++) {\n    var k = options.k ? options.k(iter) : new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n    var kp = this.g.mul(k);\n    if (kp.isInfinity()) continue;\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0) continue;\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0) continue;\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n    return new signature({\n      r: r,\n      s: s,\n      recoveryParam: recoveryParam\n    });\n  }\n};\nEC.prototype.verify = function verify(msg, signature$1, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature$1 = new signature(signature$1, 'hex');\n\n  // Perform primitive values validation\n  var r = signature$1.r;\n  var s = signature$1.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity()) return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\nEC.prototype.recoverPubKey = function (msg, signature$1, j, enc) {\n  assert$5((3 & j) === j, 'The recovery param is more than two bits');\n  signature$1 = new signature(signature$1, enc);\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature$1.r;\n  var s = signature$1.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n  var rInv = signature$1.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\nEC.prototype.getKeyRecoveryParam = function (e, signature$1, Q, enc) {\n  signature$1 = new signature(signature$1, enc);\n  if (signature$1.recoveryParam !== null) return signature$1.recoveryParam;\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature$1, i);\n    } catch (e) {\n      continue;\n    }\n    if (Qprime.eq(Q)) return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\nvar elliptic_1 = createCommonjsModule(function (module, exports) {\n  'use strict';\n\n  var elliptic = exports;\n  elliptic.version = /*RicMoo:ethers*/{\n    version: \"6.5.4\"\n  }.version;\n  elliptic.utils = utils_1$1;\n  elliptic.rand = /*RicMoo:ethers:require(brorand)*/function () {\n    throw new Error('unsupported');\n  };\n  elliptic.curve = curve_1;\n  elliptic.curves = curves_1;\n\n  // Protocols\n  elliptic.ec = ec;\n  elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/null;\n});\nvar EC$1 = elliptic_1.ec;\nexport { EC$1 as EC };","map":{"version":3,"names":["minimalisticAssert","assert","val","msg","Error","equal","assertEqual","l","r","utils","exports","toArray","enc","Array","isArray","slice","res","i","length","replace","push","parseInt","c","charCodeAt","hi","lo","zero2","word","toHex","toString","encode","arr","utils_1","getNAF","num","w","bits","naf","Math","max","bitLength","fill","ws","k","clone","z","mod","andln","isOdd","isubn","iushrn","getJSF","k1","k2","jsf","d1","d2","m8","cmpn","m14","m24","u1","u2","cachedProperty","obj","name","computer","key","prototype","undefined","call","parseBytes","bytes","intFromLE","BN","utils_1$1","assert$1","BaseCurve","type","conf","p","red","prime","mont","zero","toRed","one","two","n","g","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","div","redN","_maxwellTrick","base","point","validate","_fixedNafMul","precomputed","doubles","_getDoubles","I","step","repr","j","nafW","a","jpoint","b","mixedAdd","points","neg","add","toP","_wnafMul","nafPoints","_getNAFPoints","wnd","acc","dblp","_wnafMulAdd","defW","coeffs","len","jacobianResult","wndWidth","comb","y","cmp","toJ","redNeg","index","ja","jb","tmp","BasePoint","curve","eq","decodePoint","byteLength","pointFromX","encodeCompressed","_encode","compact","x","getX","getY","isEven","concat","precompute","power","beta","_getBeta","_hasDoubles","ceil","dbl","Object","create","module","inherits","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","assert$2","ShortCurve","tinv","redInvm","zeroA","fromRed","threeA","sub","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","inherits_browser","short_1","modn","lambda","betas","_getEndoRoots","lambdas","mul","redMul","basis","map","vec","_getEndoBasis","ntinv","s","redSqrt","l1","redAdd","l2","redSub","aprxSqrt","ushrn","floor","u","v","x1","y1","x2","y2","a0","b0","a1","b1","a2","b2","prevR","q","len1","sqr","len2","negative","_endoSplit","v1","v2","c1","divRound","c2","p1","p2","q1","q2","odd","redSqr","redIAdd","inf","ax","rhs","redISub","_endoWnafMulAdd","npoints","ncoeffs","split","ineg","Point","isRed","forceRed","fromJSON","pre","endoMul","toJSON","JSON","parse","obj2point","inspect","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","JPoint","zOne","zinv","zinv2","ay","pz2","z2","s1","s2","h","h2","h3","nz","pow","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","m","t","yyyy8","d","e","f","c8","delta","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","rx","xc","iadd","short","edwards","curves","PresetCurve","options","curve_1","hash","defineCurve","defineProperty","get","sha256","sha384","sha512","crash","HmacDRBG","predResist","outLen","outSize","minEntropy","hmacStrength","_reseed","reseedInterval","K","V","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","_init","hmacDrbg","init","seed","_update","_hmac","hmac","update","kmac","digest","reseed","addEnc","generate","temp","assert$3","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","result","reason","getPrivate","umod","derive","sign","verify","signature","assert$4","Signature","_importDER","recoveryParam","Position","place","getLength","buf","initial","octetLen","off","rmPadding","data","rlen","slen","constructLength","octets","log","LN2","toDER","backHalf","rand","assert$5","EC","hasOwnProperty","curves_1","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","iaddn","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","invm","canonical","signature$1","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","elliptic","version","eddsa","EC$1","elliptic_1"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\minimalistic-assert\\index.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\minimalistic-crypto-utils\\lib\\utils.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\utils.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\curve\\base.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\inherits\\inherits_browser.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\curve\\short.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\curve\\index.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\curves.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\hmac-drbg\\lib\\hmac-drbg.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\ec\\key.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\ec\\signature.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic\\ec\\index.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\node_modules\\elliptic\\lib\\elliptic.js","D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\signing-key\\lib.esm\\elliptic.js"],"sourcesContent":["module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","import _ec from \"elliptic\";\nvar EC = _ec.ec;\nexport { EC };\n//# sourceMappingURL=elliptic.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
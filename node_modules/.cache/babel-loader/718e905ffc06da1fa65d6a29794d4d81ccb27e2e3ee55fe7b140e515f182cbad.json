{"ast":null,"code":"\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n  constructor(localName) {\n    super(\"string\", localName);\n  }\n  defaultValue() {\n    return \"\";\n  }\n  encode(writer, value) {\n    return super.encode(writer, toUtf8Bytes(value));\n  }\n  decode(reader) {\n    return toUtf8String(super.decode(reader));\n  }\n}","map":{"version":3,"names":["toUtf8Bytes","toUtf8String","DynamicBytesCoder","StringCoder","constructor","localName","defaultValue","encode","writer","value","decode","reader"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\string.ts"],"sourcesContent":["\"use strict\";\n\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\n\nimport { Reader, Writer } from \"./abstract-coder\";\nimport { DynamicBytesCoder } from \"./bytes\";\n\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,WAAW,EAAEC,YAAY,QAAQ,wBAAwB;AAGlE,SAASC,iBAAiB,QAAQ,SAAS;AAE3C,OAAM,MAAOC,WAAY,SAAQD,iBAAiB;EAE9CE,YAAYC,SAAiB;IACzB,KAAK,CAAC,QAAQ,EAAEA,SAAS,CAAC;EAC9B;EAEAC,YAAYA,CAAA;IACR,OAAO,EAAE;EACb;EAEAC,MAAMA,CAACC,MAAc,EAAEC,KAAU;IAC7B,OAAO,KAAK,CAACF,MAAM,CAACC,MAAM,EAAER,WAAW,CAACS,KAAK,CAAC,CAAC;EACnD;EAEAC,MAAMA,CAACC,MAAc;IACjB,OAAOV,YAAY,CAAC,KAAK,CAACS,MAAM,CAACC,MAAM,CAAC,CAAC;EAC7C"},"metadata":{},"sourceType":"module","externalDependencies":[]}
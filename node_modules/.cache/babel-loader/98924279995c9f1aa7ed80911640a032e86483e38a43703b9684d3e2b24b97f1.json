{"ast":null,"code":"var _jsxFileName = \"D:\\\\temki\\\\grimace\\\\GrimaceSwap\\\\src\\\\network.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nimport { Contract, ethers } from \"ethers\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { SnackbarProvider } from \"notistack\";\nimport ConnectWalletPage from \"./Components/connectWalletPage\";\nimport { getAccount, getFactory, getRouter, getNetwork, getWeth } from \"./ethereumFunctions\";\nimport COINS from \"./constants/coins\";\nimport * as chains from \"./constants/chains\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff0000\",\n      contrastText: \"#ffffff\"\n    },\n    secondary: {\n      main: \"#9e9e9e\",\n      contrastText: \"#ffffff\"\n    }\n  }\n});\nconst autoReconnectDelay = 5000;\nconst Web3Provider = props => {\n  _s();\n  const [isConnected, setConnected] = useState(true);\n  let network = Object.create({});\n  network.provider = useRef(null);\n  network.signer = useRef(null);\n  network.account = useRef(null);\n  network.coins = [];\n  network.chainID = useRef(null);\n  network.router = useRef(null);\n  network.factory = useRef(null);\n  network.weth = useRef(null);\n  const backgroundListener = useRef(null);\n  async function setupConnection() {\n    try {\n      console.log('lets go!');\n      network.provider = new ethers.providers.Web3Provider(window.ethereum);\n      network.signer = await network.provider.getSigner();\n      await getAccount().then(async result => {\n        network.account = result;\n      });\n      await getNetwork(network.provider).then(async chainId => {\n        // Set chainID\n        network.chainID = chainId;\n        if (chains.networks.includes(chainId)) {\n          // Get the router using the chainID\n          network.router = await getRouter(chains.routerAddress.get(chainId), network.signer);\n          // Get default coins for network\n          network.coins = COINS.get(chainId);\n          // Get Weth address from router\n          await network.router.WETH().then(wethAddress => {\n            network.weth = getWeth(wethAddress, network.signer);\n            // Set the value of the weth address in the default coins array\n            network.coins[0].address = wethAddress;\n          });\n          // Get the factory address from the router\n          await network.router.factory().then(factory_address => {\n            network.factory = getFactory(factory_address, network.signer);\n          });\n          setConnected(true);\n        } else {\n          console.log(\"Wrong network mate.\");\n          setConnected(false);\n        }\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  async function createListener() {\n    return setInterval(async () => {\n      // console.log(\"Heartbeat\");\n      try {\n        // Check the account has not changed\n        const account = await getAccount();\n        if (account != network.account) {\n          await setupConnection();\n        }\n        // const chainID = await getNetwork(network.provider);\n        // if (chainID !== network.chainID){\n        //   setConnected(false);\n        //   await setupConnection();\n        // }\n      } catch (e) {\n        setConnected(false);\n        await setupConnection();\n      }\n    }, 1000);\n  }\n  useEffect(async () => {\n    // Initial setup\n    console.log(\"Initial hook\");\n    await setupConnection();\n    console.log(\"network: \", network);\n\n    // Start background listener\n    if (backgroundListener.current != null) {\n      clearInterval(backgroundListener.current);\n    }\n    const listener = createListener();\n    backgroundListener.current = listener;\n    return () => clearInterval(backgroundListener.current);\n  }, []);\n  const renderNotConnected = () => {\n    console.log(\"Rendering\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ConnectWalletPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isConnected && renderNotConnected(), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", props.render(network)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(Web3Provider, \"2t+ZFInZ6Tltz+kO5+P0AvdpPzs=\");\n_c = Web3Provider;\nexport default Web3Provider;\nvar _c;\n$RefreshReg$(_c, \"Web3Provider\");","map":{"version":3,"names":["useEffect","useState","useRef","Contract","ethers","createTheme","ThemeProvider","SnackbarProvider","ConnectWalletPage","getAccount","getFactory","getRouter","getNetwork","getWeth","COINS","chains","jsxDEV","_jsxDEV","Fragment","_Fragment","theme","palette","primary","main","contrastText","secondary","autoReconnectDelay","Web3Provider","props","_s","isConnected","setConnected","network","Object","create","provider","signer","account","coins","chainID","router","factory","weth","backgroundListener","setupConnection","console","log","providers","window","ethereum","getSigner","then","result","chainId","networks","includes","routerAddress","get","WETH","wethAddress","address","factory_address","e","createListener","setInterval","current","clearInterval","listener","renderNotConnected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","render","_c","$RefreshReg$"],"sources":["D:/temki/grimace/GrimaceSwap/src/network.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\r\nimport { Contract, ethers } from \"ethers\";\r\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport ConnectWalletPage from \"./Components/connectWalletPage\";\r\nimport {\r\n  getAccount,\r\n  getFactory,\r\n  getRouter,\r\n  getNetwork,\r\n  getWeth,\r\n} from \"./ethereumFunctions\";\r\nimport COINS from \"./constants/coins\";\r\nimport * as chains from \"./constants/chains\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#ff0000\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n    secondary: {\r\n      main: \"#9e9e9e\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nconst autoReconnectDelay = 5000;\r\n\r\nconst Web3Provider = (props) => {\r\n  const [isConnected, setConnected] = useState(true);\r\n  let network = Object.create( {} )\r\n  network.provider = useRef(null);\r\n  network.signer = useRef(null);\r\n  network.account = useRef(null);\r\n  network.coins = [];\r\n  network.chainID = useRef(null);\r\n  network.router = useRef(null);\r\n  network.factory = useRef(null);\r\n  network.weth = useRef(null);\r\n  const backgroundListener = useRef(null);\r\n  async function setupConnection() {\r\n    try {\r\n      console.log('lets go!');\r\n      network.provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      network.signer = await network.provider.getSigner();\r\n      await getAccount().then(async (result) => {\r\n        network.account = result;\r\n      });\r\n\r\n      await getNetwork(network.provider).then(async (chainId) => {\r\n        // Set chainID\r\n        network.chainID = chainId;\r\n        if (chains.networks.includes(chainId)) {\r\n          // Get the router using the chainID\r\n          network.router = await getRouter(\r\n            chains.routerAddress.get(chainId),\r\n            network.signer\r\n          );\r\n          // Get default coins for network\r\n          network.coins = COINS.get(chainId);\r\n          // Get Weth address from router\r\n          await network.router.WETH().then((wethAddress) => {\r\n            network.weth = getWeth(wethAddress, network.signer);\r\n            // Set the value of the weth address in the default coins array\r\n            network.coins[0].address = wethAddress;\r\n          });\r\n          // Get the factory address from the router\r\n          await network.router.factory().then((factory_address) => {\r\n            network.factory = getFactory(\r\n              factory_address,\r\n              network.signer\r\n            );\r\n          });\r\n          setConnected(true);\r\n        } else {\r\n          console.log(\"Wrong network mate.\");\r\n          setConnected(false);\r\n        }\r\n      });\r\n\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async function createListener() {\r\n    return setInterval(async () => {\r\n      // console.log(\"Heartbeat\");\r\n      try {\r\n        // Check the account has not changed\r\n        const account = await getAccount();\r\n        if (account != network.account) {\r\n          await setupConnection();\r\n        }\r\n        // const chainID = await getNetwork(network.provider);\r\n        // if (chainID !== network.chainID){\r\n        //   setConnected(false);\r\n        //   await setupConnection();\r\n        // }\r\n      } catch (e) {\r\n        setConnected(false);\r\n        await setupConnection();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    // Initial setup\r\n    console.log(\"Initial hook\");\r\n    await setupConnection();\r\n    console.log(\"network: \", network);\r\n\r\n    // Start background listener\r\n    if (backgroundListener.current != null) {\r\n      clearInterval(backgroundListener.current);\r\n    }\r\n    const listener = createListener();\r\n    backgroundListener.current = listener;\r\n    return () => clearInterval(backgroundListener.current);\r\n  }, []);\r\n\r\n  const renderNotConnected = () => {\r\n    console.log(\"Rendering\");\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <ConnectWalletPage />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isConnected && renderNotConnected()}\r\n      {isConnected && <div> {props.render(network)}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Web3Provider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _classCallCheck from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nexport var CloudflareProvider = /*#__PURE__*/function (_UrlJsonRpcProvider) {\n  _inherits(CloudflareProvider, _UrlJsonRpcProvider);\n  var _super2 = _createSuper(CloudflareProvider);\n  function CloudflareProvider() {\n    _classCallCheck(this, CloudflareProvider);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(CloudflareProvider, [{\n    key: \"perform\",\n    value: function perform(method, params) {\n      var _this = this;\n      var _super = Object.create(null, {\n        perform: {\n          get: function get() {\n            return _get(_getPrototypeOf(CloudflareProvider.prototype), \"perform\", _this);\n          }\n        }\n      });\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var block;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(method === \"getBlockNumber\")) {\n                _context.next = 5;\n                break;\n              }\n              _context.next = 3;\n              return _super.perform.call(this, \"getBlock\", {\n                blockTag: \"latest\"\n              });\n            case 3:\n              block = _context.sent;\n              return _context.abrupt(\"return\", block.number);\n            case 5:\n              return _context.abrupt(\"return\", _super.perform.call(this, method, params));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n    }\n  }], [{\n    key: \"getApiKey\",\n    value: function getApiKey(apiKey) {\n      if (apiKey != null) {\n        logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n      }\n      return null;\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl(network, apiKey) {\n      var host = null;\n      switch (network.name) {\n        case \"homestead\":\n          host = \"https://cloudflare-eth.com/\";\n          break;\n        default:\n          logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n      }\n      return host;\n    }\n  }]);\n  return CloudflareProvider;\n}(UrlJsonRpcProvider);","map":{"version":3,"names":["_regeneratorRuntime","_classCallCheck","_createClass","_get","_getPrototypeOf","_inherits","_createSuper","UrlJsonRpcProvider","Logger","version","logger","CloudflareProvider","_UrlJsonRpcProvider","_super2","apply","arguments","key","value","perform","method","params","_this","_context","next","_super","call","blockTag","block","sent","abrupt","number","stop","_callee","getApiKey","apiKey","throwArgumentError","getUrl","network","host","name"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\providers\\src.ts\\cloudflare-provider.ts"],"sourcesContent":["\"use strict\";\n\nimport { Network } from \"@ethersproject/networks\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n\n    static getApiKey(apiKey: any): any {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n\n    static getUrl(network: Network, apiKey?: any): string {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n               logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n\n        return host;\n    }\n\n    async perform(method: string, params: any): Promise<any> {\n        // The Cloudflare provider does not support eth_blockNumber,\n        // so we get the latest block and pull it from that\n        if (method === \"getBlockNumber\") {\n            const block = await super.perform(\"getBlock\", { blockTag: \"latest\" });\n            return block.number;\n        }\n\n        return super.perform(method, params);\n    }\n}\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,mBAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGb,SAASC,kBAAkB,QAAQ,yBAAyB;AAE5D,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,YAAY;AACpC,IAAMC,MAAM,GAAG,IAAIF,MAAM,CAACC,OAAO,CAAC;AAElC,WAAaE,kBAAmB,0BAAAC,mBAAA;EAAAP,SAAA,CAAAM,kBAAA,EAAAC,mBAAA;EAAA,IAAAC,OAAA,GAAAP,YAAA,CAAAK,kBAAA;EAAA,SAAAA,mBAAA;IAAAV,eAAA,OAAAU,kBAAA;IAAA,OAAAE,OAAA,CAAAC,KAAA,OAAAC,SAAA;EAAA;EAAAb,YAAA,CAAAS,kBAAA;IAAAK,GAAA;IAAAC,KAAA,EAsBtB,SAAAC,QAAQC,MAAc,EAAEC,MAAW;MAAA,IAAAC,KAAA;;;;;;;;;;;;;oBAGjCF,MAAM,KAAK,gBAAgB;gBAAAG,QAAA,CAAAC,IAAA;gBAAA;cAAA;cAAAD,QAAA,CAAAC,IAAA;cACb,OAAMC,MAAA,CAAMN,OAAO,CAAAO,IAAA,OAAC,UAAU,EAAE;gBAAEC,QAAQ,EAAE;cAAQ,CAAE,CAAC;YAAA;cAA/DC,KAAK,GAAAL,QAAA,CAAAM,IAAA;cAAA,OAAAN,QAAA,CAAAO,MAAA,WACJF,KAAK,CAACG,MAAM;YAAA;cAAA,OAAAR,QAAA,CAAAO,MAAA,WAGhBL,MAAA,CAAMN,OAAO,CAAAO,IAAA,OAACN,MAAM,EAAEC,MAAM;YAAA;YAAA;cAAA,OAAAE,QAAA,CAAAS,IAAA;UAAA;QAAA,GAAAC,OAAA;MAAA,CACtC;;EAAA;IAAAhB,GAAA;IAAAC,KAAA,EA7BD,SAAAgB,UAAiBC,MAAW;MACxB,IAAIA,MAAM,IAAI,IAAI,EAAE;QAChBxB,MAAM,CAACyB,kBAAkB,CAAC,qCAAqC,EAAE,QAAQ,EAAED,MAAM,CAAC;;MAEtF,OAAO,IAAI;IACf;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EAED,SAAAmB,OAAcC,OAAgB,EAAEH,MAAY;MACxC,IAAII,IAAI,GAAG,IAAI;MACf,QAAQD,OAAO,CAACE,IAAI;QAChB,KAAK,WAAW;UACZD,IAAI,GAAG,6BAA6B;UACpC;QACJ;UACG5B,MAAM,CAACyB,kBAAkB,CAAC,qBAAqB,EAAE,SAAS,EAAEpB,SAAS,CAAC,CAAC,CAAC,CAAC;;MAGhF,OAAOuB,IAAI;IACf;EAAC;EAAA,OAAA3B,kBAAA;AAAA,EApBmCJ,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
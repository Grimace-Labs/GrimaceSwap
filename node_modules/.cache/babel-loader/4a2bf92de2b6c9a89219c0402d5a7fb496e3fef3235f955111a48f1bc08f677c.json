{"ast":null,"code":"import _objectSpread from\"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from\"react\";import{Grid,makeStyles,Paper,Typography}from\"@material-ui/core\";import AccountBalanceIcon from\"@material-ui/icons/AccountBalance\";import{useSnackbar}from\"notistack\";import{getBalanceAndSymbol,getReserves}from\"../ethereumFunctions\";import{addLiquidity,quoteAddLiquidity}from\"./LiquidityFunctions\";import CoinField from\"../CoinSwapper/CoinField\";import CoinDialog from\"../CoinSwapper/CoinDialog\";import LoadingButton from\"../Components/LoadingButton\";import WrongNetwork from\"../Components/wrongNetwork\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var styles=function styles(theme){return{paperContainer:{borderRadius:theme.spacing(2),padding:theme.spacing(2),paddingBottom:theme.spacing(3),width:\"40%\",overflow:\"wrap\",background:\"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",color:\"white\"},fullWidth:{width:\"100%\"},values:{width:\"50%\"},title:{textAlign:\"center\",padding:theme.spacing(0.5),marginBottom:theme.spacing(1)},hr:{width:\"100%\"},balance:{padding:theme.spacing(1),overflow:\"wrap\",textAlign:\"center\"},buttonIcon:{marginRight:theme.spacing(1),padding:theme.spacing(0.4)}};};var useStyles=makeStyles(styles);function LiquidityDeployer(props){var classes=useStyles();var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;// Stores a record of whether their respective dialog window is open\nvar _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),dialog1Open=_React$useState2[0],setDialog1Open=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),dialog2Open=_React$useState4[0],setDialog2Open=_React$useState4[1];var _React$useState5=React.useState(false),_React$useState6=_slicedToArray(_React$useState5,2),wrongNetworkOpen=_React$useState6[0],setwrongNetworkOpen=_React$useState6[1];// Stores data about their respective coin\nvar _React$useState7=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState8=_slicedToArray(_React$useState7,2),coin1=_React$useState8[0],setCoin1=_React$useState8[1];var _React$useState9=React.useState({address:undefined,symbol:undefined,balance:undefined}),_React$useState10=_slicedToArray(_React$useState9,2),coin2=_React$useState10[0],setCoin2=_React$useState10[1];// Stores the current reserves in the liquidity pool between coin1 and coin2\nvar _React$useState11=React.useState([\"0.0\",\"0.0\"]),_React$useState12=_slicedToArray(_React$useState11,2),reserves=_React$useState12[0],setReserves=_React$useState12[1];// Stores the current value of their respective text box\nvar _React$useState13=React.useState(\"\"),_React$useState14=_slicedToArray(_React$useState13,2),field1Value=_React$useState14[0],setField1Value=_React$useState14[1];var _React$useState15=React.useState(\"\"),_React$useState16=_slicedToArray(_React$useState15,2),field2Value=_React$useState16[0],setField2Value=_React$useState16[1];// Controls the loading button\nvar _React$useState17=React.useState(false),_React$useState18=_slicedToArray(_React$useState17,2),loading=_React$useState18[0],setLoading=_React$useState18[1];// Stores the user's balance of liquidity tokens for the current pair\nvar _React$useState19=React.useState(\"\"),_React$useState20=_slicedToArray(_React$useState19,2),liquidityTokens=_React$useState20[0],setLiquidityTokens=_React$useState20[1];// Used when getting a quote of liquidity\nvar _React$useState21=React.useState([0,0,0]),_React$useState22=_slicedToArray(_React$useState21,2),liquidityOut=_React$useState22[0],setLiquidityOut=_React$useState22[1];// Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n// token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\nvar switchFields=function switchFields(){var oldField1Value=field1Value;var oldField2Value=field2Value;setCoin1(coin2);setCoin2(coin1);setField1Value(oldField2Value);setField2Value(oldField1Value);setReserves(reserves.reverse());};// These functions take an HTML event, pull the data out and puts it into a state variable.\nvar handleChange={field1:function field1(e){setField1Value(e.target.value);},field2:function field2(e){setField2Value(e.target.value);}};// Turns the account's balance into something nice and readable\nvar formatBalance=function formatBalance(balance,symbol){if(balance&&symbol)return parseFloat(balance).toPrecision(8)+\" \"+symbol;else return\"0.0\";};// Turns the coin's reserves into something nice and readable\nvar formatReserve=function formatReserve(reserve,symbol){if(reserve&&symbol)return reserve+\" \"+symbol;else return\"0.0\";};// Determines whether the button should be enabled or not\nvar isButtonEnabled=function isButtonEnabled(){// If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\nvar parsedInput1=parseFloat(field1Value);var parsedInput2=parseFloat(field2Value);return coin1.address&&coin2.address&&parsedInput1!==NaN&&0<parsedInput1&&parsedInput2!==NaN&&0<parsedInput2&&parsedInput1<=coin1.balance&&parsedInput2<=coin2.balance;};var deploy=function deploy(){console.log(\"Attempting to deploy liquidity...\");setLoading(true);addLiquidity(coin1.address,coin2.address,field1Value,field2Value,'0','0',props.network.router,props.network.account,props.network.signer).then(function(){setLoading(false);// If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\nsetField1Value(\"\");setField2Value(\"\");enqueueSnackbar(\"Deployment Successful\",{variant:\"success\"});}).catch(function(e){setLoading(false);enqueueSnackbar(\"Deployment Failed (\"+e.message+\")\",{variant:\"error\",autoHideDuration:10000});});};// Called when the dialog window for coin1 exits\nvar onToken1Selected=function onToken1Selected(address){// Close the dialog window\nsetDialog1Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin2.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1({address:address,symbol:data.symbol,balance:data.balance});});}};// Called when the dialog window for coin2 exits\nvar onToken2Selected=function onToken2Selected(address){// Close the dialog window\nsetDialog2Open(false);// If the user inputs the same token, we want to switch the data in the fields\nif(address===coin1.address){switchFields();}// We only update the values if the user provides a token\nelse if(address){// Getting some token data is async, so we need to wait for the data to return, hence the promise\ngetBalanceAndSymbol(props.network.account,address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2({address:address,symbol:data.symbol,balance:data.balance});});}};// This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n// This means that when the user selects a different coin to convert between, or the coins are swapped,\n// the new reserves will be calculated.\nuseEffect(function(){console.log(\"Trying to get reserves between:\\n\"+coin1.address+\"\\n\"+coin2.address);if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){setReserves([data[0],data[1]]);setLiquidityTokens(data[2]);});}},[coin1.address,coin2.address,props.network.account,props.network.factory,props.network.signer]);// This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\n// It will give a preview of the liquidity deployment.\nuseEffect(function(){if(isButtonEnabled()){console.log(\"Trying to preview the liquidity deployment\");quoteAddLiquidity(coin1.address,coin2.address,field1Value,field2Value,props.network.factory,props.network.signer).then(function(data){// console.log(data);\nconsole.log(\"TokenA in: \",data[0]);console.log(\"TokenB in: \",data[1]);console.log(\"Liquidity out: \",data[2]);setLiquidityOut([data[0],data[1],data[2]]);});}},[coin1.address,coin2.address,field1Value,field2Value,props.network.factory,props.network.signer]);// This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n// updated has changed. This allows them to see when a transaction completes by looking at the balance output.\nuseEffect(function(){var coinTimeout=setTimeout(function(){console.log(\"Checking balances & Getting reserves...\");if(coin1.address&&coin2.address&&props.network.account){getReserves(coin1.address,coin2.address,props.network.factory,props.network.signer,props.network.account).then(function(data){setReserves([data[0],data[1]]);setLiquidityTokens(data[2]);});}if(coin1.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin1.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin1(_objectSpread(_objectSpread({},coin1),{},{balance:data.balance}));});}if(coin2.address&&props.network.account&&!wrongNetworkOpen){getBalanceAndSymbol(props.network.account,coin2.address,props.network.provider,props.network.signer,props.network.weth.address,props.network.coins).then(function(data){setCoin2(_objectSpread(_objectSpread({},coin2),{},{balance:data.balance}));});}},10000);return function(){return clearTimeout(coinTimeout);};});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",className:classes.title}),/*#__PURE__*/_jsx(CoinDialog,{open:dialog1Open,onClose:onToken1Selected,coins:props.network.coins,signer:props.network.signer}),/*#__PURE__*/_jsx(CoinDialog,{open:dialog2Open,onClose:onToken2Selected,coins:props.network.coins,signer:props.networksigner}),/*#__PURE__*/_jsx(WrongNetwork,{open:wrongNetworkOpen}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(CoinField,{activeField:true,value:field1Value,onClick:function onClick(){return setDialog1Open(true);},onChange:handleChange.field1,symbol:coin1.symbol!==undefined?coin1.symbol:\"Select\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,className:classes.fullWidth,children:/*#__PURE__*/_jsx(CoinField,{activeField:true,value:field2Value,onClick:function onClick(){return setDialog2Open(true);},onChange:handleChange.field2,symbol:coin2.symbol!==undefined?coin2.symbol:\"Select\"})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",alignItems:\"center\",justifyContent:\"center\",spacing:4,className:classes.balance,children:[/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsxs(Grid,{container:true,item:true,className:classes.values,direction:\"column\",alignItems:\"center\",spacing:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Your Balances\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(coin1.balance,coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(coin2.balance,coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Reserves\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(reserves[0],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(reserves[1],coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Your Liquidity Pool Tokens\"}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(liquidityTokens,\"UNI-V2\")})})})]}),/*#__PURE__*/_jsx(Paper,{className:classes.paperContainer,children:/*#__PURE__*/_jsxs(Grid,{container:true,item:true,direction:\"column\",alignItems:\"center\",spacing:2,className:classes.fullWidth,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Tokens in\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(liquidityOut[0],coin1.symbol)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatBalance(liquidityOut[1],coin2.symbol)})})]}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Liquidity Pool Tokens Out\"}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"row\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:6,children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",className:classes.balance,children:formatReserve(liquidityOut[2],\"UNI-V2\")})})})]})}),/*#__PURE__*/_jsx(\"hr\",{className:classes.hr})]}),/*#__PURE__*/_jsx(Grid,{container:true,direction:\"column\",alignItems:\"center\",spacing:2,children:/*#__PURE__*/_jsxs(LoadingButton,{loading:loading,valid:isButtonEnabled(),success:false,fail:false,onClick:deploy,children:[/*#__PURE__*/_jsx(AccountBalanceIcon,{className:classes.buttonIcon}),\"Deploy\"]})})]});}export default LiquidityDeployer;","map":{"version":3,"names":["React","useEffect","Grid","makeStyles","Paper","Typography","AccountBalanceIcon","useSnackbar","getBalanceAndSymbol","getReserves","addLiquidity","quoteAddLiquidity","CoinField","CoinDialog","LoadingButton","WrongNetwork","jsx","_jsx","jsxs","_jsxs","styles","theme","paperContainer","borderRadius","spacing","padding","paddingBottom","width","overflow","background","color","fullWidth","values","title","textAlign","marginBottom","hr","balance","buttonIcon","marginRight","useStyles","LiquidityDeployer","props","classes","_useSnackbar","enqueueSnackbar","_React$useState","useState","_React$useState2","_slicedToArray","dialog1Open","setDialog1Open","_React$useState3","_React$useState4","dialog2Open","setDialog2Open","_React$useState5","_React$useState6","wrongNetworkOpen","setwrongNetworkOpen","_React$useState7","address","undefined","symbol","_React$useState8","coin1","setCoin1","_React$useState9","_React$useState10","coin2","setCoin2","_React$useState11","_React$useState12","reserves","setReserves","_React$useState13","_React$useState14","field1Value","setField1Value","_React$useState15","_React$useState16","field2Value","setField2Value","_React$useState17","_React$useState18","loading","setLoading","_React$useState19","_React$useState20","liquidityTokens","setLiquidityTokens","_React$useState21","_React$useState22","liquidityOut","setLiquidityOut","switchFields","oldField1Value","oldField2Value","reverse","handleChange","field1","e","target","value","field2","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput1","parsedInput2","NaN","deploy","console","log","network","router","account","signer","then","variant","catch","message","autoHideDuration","onToken1Selected","provider","weth","coins","data","onToken2Selected","factory","coinTimeout","setTimeout","_objectSpread","clearTimeout","children","className","open","onClose","networksigner","container","direction","alignItems","item","xs","activeField","onClick","onChange","justifyContent","valid","success","fail"],"sources":["D:/temki/grimace/GrimaceSwap/src/Liquidity/LiquidityDeployer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport {\r\n  getBalanceAndSymbol,\r\n  getReserves,\r\n} from \"../ethereumFunctions\";\r\n\r\nimport { addLiquidity, quoteAddLiquidity } from \"./LiquidityFunctions\";\r\n\r\nimport CoinField from \"../CoinSwapper/CoinField\";\r\nimport CoinDialog from \"../CoinSwapper/CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\n\r\nconst styles = (theme) => ({\r\n  paperContainer: {\r\n    borderRadius: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    paddingBottom: theme.spacing(3),\r\n    width: \"40%\",\r\n    overflow: \"wrap\",\r\n    background: \"linear-gradient(45deg, #ff0000 30%, #FF8E53 90%)\",\r\n    color: \"white\",\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  values: {\r\n    width: \"50%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n    padding: theme.spacing(0.4),\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction LiquidityDeployer(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen, setwrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const [reserves, setReserves] = React.useState([\"0.0\", \"0.0\"]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Stores the user's balance of liquidity tokens for the current pair\r\n  const [liquidityTokens, setLiquidityTokens] = React.useState(\"\");\r\n\r\n  // Used when getting a quote of liquidity\r\n  const [liquidityOut, setLiquidityOut] = React.useState([0, 0, 0]);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    let oldField1Value = field1Value;\r\n    let oldField2Value = field2Value;\r\n\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(oldField2Value);\r\n    setField2Value(oldField1Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n    field2: (e) => {\r\n      setField2Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n\r\n    // If both coins have been selected, and a valid float has been entered for both, which are less than the user's balances, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      parsedInput1 !== NaN &&\r\n      0 < parsedInput1 &&\r\n      parsedInput2 !== NaN &&\r\n      0 < parsedInput2 &&\r\n      parsedInput1 <= coin1.balance &&\r\n      parsedInput2 <= coin2.balance\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const deploy = () => {\r\n    console.log(\"Attempting to deploy liquidity...\");\r\n    setLoading(true);\r\n\r\n    addLiquidity(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      field2Value,\r\n      '0',\r\n      '0',\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        setField2Value(\"\");\r\n        enqueueSnackbar(\"Deployment Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Deployment Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(\r\n        props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account,\r\n        address,\r\n        props.network.provider,\r\n        props.network.signer,\r\n        props.network.weth.address,\r\n        props.network.coins\r\n        ).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address && props.network.account) {\r\n      getReserves(\r\n        coin1.address,\r\n        coin2.address,\r\n        props.network.factory,\r\n        props.network.signer,\r\n        props.network.account\r\n        ).then(\r\n        (data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        }\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value`, `field2Value`, `coin1.address` or `coin2.address` change.\r\n  // It will give a preview of the liquidity deployment.\r\n  useEffect(() => {\r\n    if (isButtonEnabled()) {\r\n      console.log(\"Trying to preview the liquidity deployment\");\r\n\r\n      quoteAddLiquidity(\r\n        coin1.address,\r\n        coin2.address,\r\n        field1Value,\r\n        field2Value,\r\n        props.network.factory,\r\n        props.network.signer\r\n      ).then((data) => {\r\n        // console.log(data);\r\n        console.log(\"TokenA in: \", data[0]);\r\n        console.log(\"TokenB in: \", data[1]);\r\n        console.log(\"Liquidity out: \", data[2]);\r\n        setLiquidityOut([data[0], data[1], data[2]]);\r\n      });\r\n    }\r\n  }, [coin1.address, coin2.address, field1Value, field2Value, props.network.factory, props.network.signer]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log(\"Checking balances & Getting reserves...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => {\r\n          setReserves([data[0], data[1]]);\r\n          setLiquidityTokens(data[2]);\r\n        });\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {/* Liquidity deployer */}\r\n      <Typography variant=\"h5\" className={classes.title}></Typography>\r\n\r\n      {/* Dialog Windows */}\r\n      <CoinDialog\r\n        open={dialog1Open}\r\n        onClose={onToken1Selected}\r\n        coins={props.network.coins}\r\n        signer={props.network.signer}\r\n      />\r\n      <CoinDialog\r\n        open={dialog2Open}\r\n        onClose={onToken2Selected}\r\n        coins={props.network.coins}\r\n        signer={props.networksigner}\r\n      />\r\n      <WrongNetwork\r\n        open={wrongNetworkOpen}\r\n      />\r\n\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field1Value}\r\n            onClick={() => setDialog1Open(true)}\r\n            onChange={handleChange.field1}\r\n            symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} className={classes.fullWidth}>\r\n          <CoinField\r\n            activeField={true}\r\n            value={field2Value}\r\n            onClick={() => setDialog2Open(true)}\r\n            onChange={handleChange.field2}\r\n            symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        spacing={4}\r\n        className={classes.balance}\r\n      >\r\n        <hr className={classes.hr} />\r\n        <Grid\r\n          container\r\n          item\r\n          className={classes.values}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          {/* Balance Display */}\r\n          <Typography variant=\"h6\">Your Balances</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin1.balance, coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatBalance(coin2.balance, coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Reserves Display */}\r\n          <Typography variant=\"h6\">Reserves</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[0], coin1.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(reserves[1], coin2.symbol)}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <hr className={classes.hr} />\r\n\r\n          {/* Liquidity Tokens Display */}\r\n          <Typography variant=\"h6\">Your Liquidity Pool Tokens</Typography>\r\n          <Grid container direction=\"row\" justifyContent=\"center\">\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"body1\" className={classes.balance}>\r\n                {formatReserve(liquidityTokens, \"UNI-V2\")}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Paper className={classes.paperContainer}>\r\n          {/*Red  Display to show the quote */}\r\n          <Grid\r\n            container\r\n            item\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            className={classes.fullWidth}\r\n          >\r\n            {/* Tokens in */}\r\n            <Typography variant=\"h6\">Tokens in</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(liquidityOut[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Liquidity Tokens Display */}\r\n            <Typography variant=\"h6\">Liquidity Pool Tokens Out</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"center\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(liquidityOut[2], \"UNI-V2\")}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <hr className={classes.hr} />\r\n      </Grid>\r\n      <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n        <LoadingButton\r\n          loading={loading}\r\n          valid={isButtonEnabled()}\r\n          success={false}\r\n          fail={false}\r\n          onClick={deploy}\r\n        >\r\n          <AccountBalanceIcon className={classes.buttonIcon} />\r\n          Deploy\r\n        </LoadingButton>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LiquidityDeployer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
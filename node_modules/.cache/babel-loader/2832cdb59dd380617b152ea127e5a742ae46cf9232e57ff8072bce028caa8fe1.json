{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/temki/grimace/GrimaceSwap/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport var TupleCoder = /*#__PURE__*/function (_Coder) {\n  _inherits(TupleCoder, _Coder);\n  var _super = _createSuper(TupleCoder);\n  function TupleCoder(coders, localName) {\n    var _this;\n    _classCallCheck(this, TupleCoder);\n    var dynamic = false;\n    var types = [];\n    coders.forEach(function (coder) {\n      if (coder.dynamic) {\n        dynamic = true;\n      }\n      types.push(coder.type);\n    });\n    var type = \"tuple(\" + types.join(\",\") + \")\";\n    _this = _super.call(this, \"tuple\", type, localName, dynamic);\n    _this.coders = coders;\n    return _this;\n  }\n  _createClass(TupleCoder, [{\n    key: \"defaultValue\",\n    value: function defaultValue() {\n      var values = [];\n      this.coders.forEach(function (coder) {\n        values.push(coder.defaultValue());\n      });\n      // We only output named properties for uniquely named coders\n      var uniqueNames = this.coders.reduce(function (accum, coder) {\n        var name = coder.localName;\n        if (name) {\n          if (!accum[name]) {\n            accum[name] = 0;\n          }\n          accum[name]++;\n        }\n        return accum;\n      }, {});\n      // Add named values\n      this.coders.forEach(function (coder, index) {\n        var name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n          return;\n        }\n        if (name === \"length\") {\n          name = \"_length\";\n        }\n        if (values[name] != null) {\n          return;\n        }\n        values[name] = values[index];\n      });\n      return Object.freeze(values);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(writer, value) {\n      return pack(writer, this.coders, value);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(reader) {\n      return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n  }]);\n  return TupleCoder;\n}(Coder);","map":{"version":3,"names":["_classCallCheck","_createClass","_inherits","_createSuper","Coder","pack","unpack","TupleCoder","_Coder","_super","coders","localName","_this","dynamic","types","forEach","coder","push","type","join","call","key","value","defaultValue","values","uniqueNames","reduce","accum","name","index","Object","freeze","encode","writer","decode","reader","coerce"],"sources":["D:\\temki\\grimace\\GrimaceSwap\\node_modules\\@ethersproject\\abi\\src.ts\\coders\\tuple.ts"],"sourcesContent":["\"use strict\";\n\nimport { Coder, Reader, Writer } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\n\nexport class TupleCoder extends Coder {\n    readonly coders: Array<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, value: Array<any> | { [ name: string ]: any }): number {\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n\n"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,eAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,YAAA;AAEb,SAASC,KAAK,QAAwB,kBAAkB;AACxD,SAASC,IAAI,EAAEC,MAAM,QAAQ,SAAS;AAEtC,WAAaC,UAAW,0BAAAC,MAAA;EAAAN,SAAA,CAAAK,UAAA,EAAAC,MAAA;EAAA,IAAAC,MAAA,GAAAN,YAAA,CAAAI,UAAA;EAGpB,SAAAA,WAAYG,MAAoB,EAAEC,SAAiB;IAAA,IAAAC,KAAA;IAAAZ,eAAA,OAAAO,UAAA;IAC/C,IAAIM,OAAO,GAAG,KAAK;IACnB,IAAMC,KAAK,GAAkB,EAAE;IAC/BJ,MAAM,CAACK,OAAO,CAAC,UAACC,KAAK,EAAI;MACrB,IAAIA,KAAK,CAACH,OAAO,EAAE;QAAEA,OAAO,GAAG,IAAI;;MACnCC,KAAK,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IAC1B,CAAC,CAAC;IACF,IAAMA,IAAI,GAAI,QAAQ,GAAGJ,KAAK,CAACK,IAAI,CAAC,GAAG,CAAC,GAAG,GAAI;IAE/CP,KAAA,GAAAH,MAAA,CAAAW,IAAA,OAAM,OAAO,EAAEF,IAAI,EAAEP,SAAS,EAAEE,OAAO;IACvCD,KAAA,CAAKF,MAAM,GAAGA,MAAM;IAAC,OAAAE,KAAA;EACzB;EAACX,YAAA,CAAAM,UAAA;IAAAc,GAAA;IAAAC,KAAA,EAED,SAAAC,aAAA,EAAY;MACR,IAAMC,MAAM,GAAQ,EAAG;MACvB,IAAI,CAACd,MAAM,CAACK,OAAO,CAAC,UAACC,KAAK,EAAI;QAC1BQ,MAAM,CAACP,IAAI,CAACD,KAAK,CAACO,YAAY,EAAE,CAAC;MACrC,CAAC,CAAC;MAEF;MACA,IAAME,WAAW,GAAG,IAAI,CAACf,MAAM,CAACgB,MAAM,CAAC,UAACC,KAAK,EAAEX,KAAK,EAAI;QACpD,IAAMY,IAAI,GAAGZ,KAAK,CAACL,SAAS;QAC5B,IAAIiB,IAAI,EAAE;UACN,IAAI,CAACD,KAAK,CAACC,IAAI,CAAC,EAAE;YAAED,KAAK,CAACC,IAAI,CAAC,GAAG,CAAC;;UACnCD,KAAK,CAACC,IAAI,CAAC,EAAE;;QAEjB,OAAOD,KAAK;MAChB,CAAC,EAAgC,EAAG,CAAC;MAErC;MACA,IAAI,CAACjB,MAAM,CAACK,OAAO,CAAC,UAACC,KAAY,EAAEa,KAAa,EAAI;QAChD,IAAID,IAAI,GAAGZ,KAAK,CAACL,SAAS;QAC1B,IAAI,CAACiB,IAAI,IAAIH,WAAW,CAACG,IAAI,CAAC,KAAK,CAAC,EAAE;UAAE;;QAExC,IAAIA,IAAI,KAAK,QAAQ,EAAE;UAAEA,IAAI,GAAG,SAAS;;QAEzC,IAAIJ,MAAM,CAACI,IAAI,CAAC,IAAI,IAAI,EAAE;UAAE;;QAE5BJ,MAAM,CAACI,IAAI,CAAC,GAAGJ,MAAM,CAACK,KAAK,CAAC;MAChC,CAAC,CAAC;MAEF,OAAOC,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC;IAChC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAU,OAAOC,MAAc,EAAEX,KAA6C;MAChE,OAAOjB,IAAI,CAAC4B,MAAM,EAAE,IAAI,CAACvB,MAAM,EAAEY,KAAK,CAAC;IAC3C;EAAC;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAY,OAAOC,MAAc;MACjB,OAAOA,MAAM,CAACC,MAAM,CAAC,IAAI,CAACR,IAAI,EAAEtB,MAAM,CAAC6B,MAAM,EAAE,IAAI,CAACzB,MAAM,CAAC,CAAC;IAChE;EAAC;EAAA,OAAAH,UAAA;AAAA,EArD2BH,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\temki\\\\grimace\\\\GrimaceSwap\\\\src\\\\CoinSwapper\\\\CoinSwapper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport BigNumber from \"bignumber.js\";\nimport { Container, Grid, IconButton, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\nimport { useSnackbar } from \"notistack\";\nimport LoopIcon from \"@material-ui/icons/Loop\";\nimport { getAmountOut, getBalanceAndSymbol, swapTokens, getReserves, getAllowance, approveToken } from \"../ethereumFunctions\";\nimport CoinField from \"./CoinField\";\nimport CoinDialog from \"./CoinDialog\";\nimport LoadingButton from \"../Components/LoadingButton\";\nimport WrongNetwork from \"../Components/wrongNetwork\";\nimport { dogechainRouter } from \"../constants/chains\";\nimport { DOGE, GRIMACE } from \"../constants/coins\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = theme => ({\n  allContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: '0 20px',\n    maxWidth: '1400px',\n    margin: '0 auto',\n    justifyContent: 'center',\n    [theme.breakpoints.down('md')]: {\n      flexDirection: 'column-reverse'\n    }\n  },\n  graph: {\n    margin: '0 auto',\n    border: '2px solid rgba(113, 83, 217, 1)',\n    borderRadius: theme.spacing(2),\n    maxWidth: '90vw'\n  },\n  paperContainer: {\n    backgroundColor: '#2F2A70',\n    borderRadius: theme.spacing(2),\n    border: '2px solid rgba(113, 83, 217, 1)',\n    padding: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    color: 'white',\n    [theme.breakpoints.down('md')]: {\n      marginBottom: '100px'\n    }\n  },\n  switchButton: {\n    zIndex: 1,\n    margin: \"-16px\",\n    padding: theme.spacing(0.5)\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  title: {\n    textAlign: \"center\",\n    padding: theme.spacing(0.5),\n    marginBottom: theme.spacing(1)\n  },\n  hr: {\n    width: \"100%\"\n  },\n  balance: {\n    padding: theme.spacing(1),\n    overflow: \"wrap\",\n    textAlign: \"center\"\n  },\n  footer: {\n    marginTop: \"285px\"\n  }\n});\nconst useStyles = makeStyles(styles);\nfunction CoinSwapper(props) {\n  _s();\n  const classes = useStyles();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [approveIsRequired, setApproveRequired] = useState(false);\n  const [priceImpact, setPriceImpact] = useState('0');\n\n  // Stores a record of whether their respective dialog window is open\n  const [dialog1Open, setDialog1Open] = React.useState(false);\n  const [dialog2Open, setDialog2Open] = React.useState(false);\n  const [wrongNetworkOpen] = React.useState(false);\n\n  // Stores data about their respective coin\n  const [coin1, setCoin1] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n  const [coin2, setCoin2] = React.useState({\n    address: undefined,\n    symbol: undefined,\n    balance: undefined\n  });\n\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\n  const reverseDefaultValue = '0.0';\n  const [reserves, setReserves] = React.useState([reverseDefaultValue, reverseDefaultValue]);\n\n  // Stores the current value of their respective text box\n  const [field1Value, setField1Value] = React.useState(\"\");\n  const [field2Value, setField2Value] = React.useState(\"\");\n\n  // Controls the loading button\n  const [loading, setLoading] = React.useState(false);\n\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\n  const switchFields = () => {\n    setCoin1(coin2);\n    setCoin2(coin1);\n    setField1Value(field2Value);\n    setReserves(reserves.reverse());\n  };\n\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\n  const handleChange = {\n    field1: e => {\n      setField1Value(e.target.value);\n    }\n  };\n\n  // Turns the account's balance into something nice and readable\n  const formatBalance = (balance, symbol) => {\n    if (balance && symbol) return parseFloat(balance).toPrecision(8) + \" \" + symbol;else return \"0.0\";\n  };\n\n  // Turns the coin's reserves into something nice and readable\n  const formatReserve = (reserve, symbol) => {\n    if (reserve && symbol) return reserve + \" \" + symbol;else return \"0.0\";\n  };\n\n  // Determines whether the button should be enabled or not\n  const isButtonEnabled = () => {\n    if (approveIsRequired) return true;\n\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\n    const parsedInput1 = parseFloat(field1Value);\n    const parsedInput2 = parseFloat(field2Value);\n    return coin1.address && coin2.address && !isNaN(parsedInput1) && !isNaN(parsedInput2) && 0 < parsedInput1 && parsedInput1 <= coin1.balance;\n  };\n\n  // Called when the dialog window for coin1 exits\n  const onToken1Selected = address => {\n    // Close the dialog window\n    setDialog1Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin2.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n        setCoin1({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance\n        });\n        if (props.network.weth.address !== address) {\n          getAllowance(address, props.network.account, dogechainRouter, props.network.signer).then(allowance => {\n            if (!allowance) return;\n            setApproveRequired(allowance.lt(data.balanceRaw));\n          });\n        }\n      });\n    }\n  };\n\n  // Called when the dialog window for coin2 exits\n  const onToken2Selected = address => {\n    // Close the dialog window\n    setDialog2Open(false);\n\n    // If the user inputs the same token, we want to switch the data in the fields\n    if (address === coin1.address) {\n      switchFields();\n    }\n    // We only update the values if the user provides a token\n    else if (address) {\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n        setCoin2({\n          address: address,\n          symbol: data.symbol,\n          balance: data.balance\n        });\n      });\n    }\n  };\n\n  // Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\n  const swap = () => {\n    console.log(\"Attempting to swap tokens...\");\n    setLoading(true);\n    if (approveIsRequired) {\n      return approveToken(coin1.address, dogechainRouter, props.network.signer).then(() => {\n        setLoading(false);\n        setApproveRequired(false);\n        enqueueSnackbar(\"Approved\", {\n          variant: \"success\"\n        });\n      }).catch(e => {\n        setLoading(false);\n        enqueueSnackbar(\"Approve Failed (\" + e.message + \")\", {\n          variant: \"error\",\n          autoHideDuration: 10000\n        });\n      });\n    }\n    swapTokens(coin1.address, coin2.address, field1Value, props.network.router, props.network.account, props.network.signer).then(() => {\n      setLoading(false);\n\n      // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\n      setField1Value(\"\");\n      enqueueSnackbar(\"Transaction Successful\", {\n        variant: \"success\"\n      });\n    }).catch(e => {\n      setLoading(false);\n      enqueueSnackbar(\"Transaction Failed (\" + e.message + \")\", {\n        variant: \"error\",\n        autoHideDuration: 10000\n      });\n    });\n  };\n\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\n  // of the two coins change.\n\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\n  // the new reserves will be calculated.\n  useEffect(() => {\n    console.log(\"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address);\n    if (coin1.address && coin2.address) {\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(data => setReserves(data));\n    }\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.router, props.network.signer]);\n\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\n  // It attempts to calculate and set the state variable `field2Value`\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\n  // the value in the output box will change.\n  useEffect(() => {\n    if (isNaN(parseFloat(field1Value))) {\n      setField2Value(\"\");\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\n      getAmountOut(coin1.address, coin2.address, field1Value, props.network.router, props.network.signer).then(amount => {\n        setField2Value(amount.toFixed(7));\n        const inPoolSize = new BigNumber(ethers.utils.parseUnits(reserves[0], 18).toString());\n        const outPoolSize = new BigNumber(ethers.utils.parseUnits(reserves[1], 18).toString());\n        const inAmount = new BigNumber(ethers.utils.parseUnits(field1Value, 18).toString());\n        const proportionBefore = outPoolSize.div(inPoolSize);\n\n        // console.log(`1 token per: [BEFORE] ${proportionBefore.toString()}`);\n\n        const constantProduct = inPoolSize.times(outPoolSize);\n        const inPoolSizeAfter = inPoolSize.plus(inAmount);\n        const outPoolSizeAfter = constantProduct.div(inPoolSizeAfter);\n        const proportionAfter = outPoolSizeAfter.div(inPoolSizeAfter);\n\n        // console.log(`1 token per [AFTER]: ${proportionAfter.toString()}`);\n\n        const differentAmount = proportionBefore.minus(proportionAfter);\n        const differentPersentage = differentAmount.div(proportionBefore).times(100);\n        setPriceImpact(differentPersentage.toFixed(2));\n      }).catch(e => {\n        console.log(e);\n        setField2Value(\"NA\");\n      });\n    } else {\n      setField2Value(\"\");\n    }\n  }, [field1Value, coin1.address, coin2.address, reserves]);\n\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\n  useEffect(() => {\n    const coinTimeout = setTimeout(() => {\n      console.log('props: ', props);\n      console.log(\"Checking balances...\");\n      if (coin1.address && coin2.address && props.network.account) {\n        getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(data => setReserves(data));\n      }\n      if (coin1.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account, coin1.address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin1({\n            ...coin1,\n            balance: data.balance\n          });\n        });\n      }\n      if (coin2.address && props.network.account && !wrongNetworkOpen) {\n        getBalanceAndSymbol(props.network.account, coin2.address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then(data => {\n          setCoin2({\n            ...coin2,\n            balance: data.balance\n          });\n        });\n      }\n    }, 10000);\n    return () => clearTimeout(coinTimeout);\n  });\n  useEffect(() => {\n    setCoin1(DOGE);\n    setCoin2(GRIMACE);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.allContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: \"https://dexscreener.com/dogechain/0x1aAD352a2190B399Bb3cfD4d5E4B0bf6EFA33C0e?embed=1&theme=dark&trades=0&info=0\",\n      title: \"MyFrame\",\n      width: \"780px\",\n      height: \"650px\",\n      className: classes.graph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xs\",\n      className: classes.swapContainer,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paperContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: classes.title,\n          children: \"Swap Coins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          alignItems: \"center\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.fullWidth,\n            children: /*#__PURE__*/_jsxDEV(CoinField, {\n              activeField: true,\n              value: field1Value,\n              onClick: () => setDialog1Open(true),\n              onChange: handleChange.field1,\n              symbol: coin1.symbol !== undefined ? coin1.symbol : \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: switchFields,\n            className: classes.switchButton,\n            children: /*#__PURE__*/_jsxDEV(SwapVerticalCircleIcon, {\n              fontSize: \"medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            className: classes.fullWidth,\n            children: /*#__PURE__*/_jsxDEV(CoinField, {\n              activeField: false,\n              value: field2Value,\n              onClick: () => setDialog2Open(true),\n              symbol: coin2.symbol !== undefined ? coin2.symbol : \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: classes.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Your Balances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(coin1.balance, coin1.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatBalance(coin2.balance, coin2.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: classes.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"Reserves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatReserve(reserves[0], coin1.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: formatReserve(reserves[1], coin2.symbol)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: \"Price Impact:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                className: classes.balance,\n                children: [priceImpact, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: classes.hr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            loading: loading,\n            valid: isButtonEnabled(),\n            success: false,\n            fail: false,\n            onClick: swap,\n            children: [/*#__PURE__*/_jsxDEV(LoopIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), approveIsRequired ? `Approve ${coin1.symbol}` : \"swap\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 5\n  }, this);\n}\n_s(CoinSwapper, \"0cPO5H2sgW9k99ulkJMfWjgWCF8=\", false, function () {\n  return [useStyles, useSnackbar];\n});\n_c = CoinSwapper;\nexport default CoinSwapper;\nvar _c;\n$RefreshReg$(_c, \"CoinSwapper\");","map":{"version":3,"names":["React","useEffect","useState","ethers","BigNumber","Container","Grid","IconButton","makeStyles","Paper","Typography","SwapVerticalCircleIcon","useSnackbar","LoopIcon","getAmountOut","getBalanceAndSymbol","swapTokens","getReserves","getAllowance","approveToken","CoinField","CoinDialog","LoadingButton","WrongNetwork","dogechainRouter","DOGE","GRIMACE","jsxDEV","_jsxDEV","styles","theme","allContainer","display","flexDirection","flexWrap","alignItems","padding","maxWidth","margin","justifyContent","breakpoints","down","graph","border","borderRadius","spacing","paperContainer","backgroundColor","paddingBottom","color","marginBottom","switchButton","zIndex","fullWidth","width","title","textAlign","hr","balance","overflow","footer","marginTop","useStyles","CoinSwapper","props","_s","classes","enqueueSnackbar","approveIsRequired","setApproveRequired","priceImpact","setPriceImpact","dialog1Open","setDialog1Open","dialog2Open","setDialog2Open","wrongNetworkOpen","coin1","setCoin1","address","undefined","symbol","coin2","setCoin2","reverseDefaultValue","reserves","setReserves","field1Value","setField1Value","field2Value","setField2Value","loading","setLoading","switchFields","reverse","handleChange","field1","e","target","value","formatBalance","parseFloat","toPrecision","formatReserve","reserve","isButtonEnabled","parsedInput1","parsedInput2","isNaN","onToken1Selected","network","account","provider","signer","weth","coins","then","data","allowance","lt","balanceRaw","onToken2Selected","swap","console","log","variant","catch","message","autoHideDuration","router","factory","amount","toFixed","inPoolSize","utils","parseUnits","toString","outPoolSize","inAmount","proportionBefore","div","constantProduct","times","inPoolSizeAfter","plus","outPoolSizeAfter","proportionAfter","differentAmount","minus","differentPersentage","coinTimeout","setTimeout","clearTimeout","className","children","src","height","fileName","_jsxFileName","lineNumber","columnNumber","swapContainer","container","direction","item","xs","activeField","onClick","onChange","fontSize","valid","success","fail","_c","$RefreshReg$"],"sources":["D:/temki/grimace/GrimaceSwap/src/CoinSwapper/CoinSwapper.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { ethers } from \"ethers\";\r\nimport BigNumber from \"bignumber.js\";\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport SwapVerticalCircleIcon from \"@material-ui/icons/SwapVerticalCircle\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport {\r\n  getAmountOut,\r\n  getBalanceAndSymbol,\r\n  swapTokens,\r\n  getReserves,\r\n  getAllowance,\r\n  approveToken\r\n} from \"../ethereumFunctions\";\r\nimport CoinField from \"./CoinField\";\r\nimport CoinDialog from \"./CoinDialog\";\r\nimport LoadingButton from \"../Components/LoadingButton\";\r\nimport WrongNetwork from \"../Components/wrongNetwork\";\r\nimport { dogechainRouter } from \"../constants/chains\";\r\nimport { DOGE, GRIMACE } from \"../constants/coins\";\r\n\r\nconst styles = (theme) => ({\r\n  allContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    padding: '0 20px',\r\n    maxWidth: '1400px',\r\n    margin: '0 auto',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  },\r\n  graph: {\r\n    margin: '0 auto',\r\n    border: '2px solid rgba(113, 83, 217, 1)',\r\n    borderRadius: theme.spacing(2),\r\n    maxWidth: '90vw'\r\n  },\r\n  paperContainer: {\r\n    backgroundColor: '#2F2A70',\r\n    borderRadius: theme.spacing(2),\r\n    border: '2px solid rgba(113, 83, 217, 1)',\r\n    padding: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    color: 'white',\r\n    [theme.breakpoints.down('md')]: {\r\n      marginBottom: '100px',\r\n    },\r\n  },\r\n  switchButton: {\r\n    zIndex: 1,\r\n    margin: \"-16px\",\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  fullWidth: {\r\n    width: \"100%\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n    padding: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(1),\r\n\r\n  },\r\n  hr: {\r\n    width: \"100%\",\r\n  },\r\n  balance: {\r\n    padding: theme.spacing(1),\r\n    overflow: \"wrap\",\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    marginTop: \"285px\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction CoinSwapper(props) {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [approveIsRequired, setApproveRequired] = useState(false);\r\n  const [priceImpact, setPriceImpact] = useState('0');\r\n\r\n  // Stores a record of whether their respective dialog window is open\r\n  const [dialog1Open, setDialog1Open] = React.useState(false);\r\n  const [dialog2Open, setDialog2Open] = React.useState(false);\r\n  const [wrongNetworkOpen] = React.useState(false);\r\n\r\n  // Stores data about their respective coin\r\n  const [coin1, setCoin1] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n  const [coin2, setCoin2] = React.useState({\r\n    address: undefined,\r\n    symbol: undefined,\r\n    balance: undefined,\r\n  });\r\n\r\n  // Stores the current reserves in the liquidity pool between coin1 and coin2\r\n  const reverseDefaultValue = '0.0';\r\n  const [reserves, setReserves] = React.useState([reverseDefaultValue, reverseDefaultValue]);\r\n\r\n  // Stores the current value of their respective text box\r\n  const [field1Value, setField1Value] = React.useState(\"\");\r\n  const [field2Value, setField2Value] = React.useState(\"\");\r\n\r\n  // Controls the loading button\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  // Switches the top and bottom coins, this is called when users hit the swap button or select the opposite\r\n  // token in the dialog (e.g. if coin1 is TokenA and the user selects TokenB when choosing coin2)\r\n  const switchFields = () => {\r\n    setCoin1(coin2);\r\n    setCoin2(coin1);\r\n    setField1Value(field2Value);\r\n    setReserves(reserves.reverse());\r\n  };\r\n\r\n  // These functions take an HTML event, pull the data out and puts it into a state variable.\r\n  const handleChange = {\r\n    field1: (e) => {\r\n      setField1Value(e.target.value);\r\n    },\r\n  };\r\n\r\n  // Turns the account's balance into something nice and readable\r\n  const formatBalance = (balance, symbol) => {\r\n    if (balance && symbol)\r\n      return parseFloat(balance).toPrecision(8) + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Turns the coin's reserves into something nice and readable\r\n  const formatReserve = (reserve, symbol) => {\r\n    if (reserve && symbol) return reserve + \" \" + symbol;\r\n    else return \"0.0\";\r\n  };\r\n\r\n  // Determines whether the button should be enabled or not\r\n  const isButtonEnabled = () => {\r\n    if (approveIsRequired) return true;\r\n\r\n    // If both coins have been selected, and a valid float has been entered which is less than the user's balance, then return true\r\n    const parsedInput1 = parseFloat(field1Value);\r\n    const parsedInput2 = parseFloat(field2Value);\r\n    return (\r\n      coin1.address &&\r\n      coin2.address &&\r\n      !isNaN(parsedInput1) &&\r\n      !isNaN(parsedInput2) &&\r\n      0 < parsedInput1 &&\r\n      parsedInput1 <= coin1.balance\r\n    );\r\n  };\r\n\r\n  // Called when the dialog window for coin1 exits\r\n  const onToken1Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog1Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin2.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\r\n        setCoin1({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n\r\n        if (props.network.weth.address !== address){\r\n          getAllowance(address, props.network.account, dogechainRouter, props.network.signer).then((allowance) => {\r\n            if (!allowance) return;\r\n  \r\n            setApproveRequired(allowance.lt(data.balanceRaw));\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  // Called when the dialog window for coin2 exits\r\n  const onToken2Selected = (address) => {\r\n    // Close the dialog window\r\n    setDialog2Open(false);\r\n\r\n    // If the user inputs the same token, we want to switch the data in the fields\r\n    if (address === coin1.address) {\r\n      switchFields();\r\n    }\r\n    // We only update the values if the user provides a token\r\n    else if (address) {\r\n      // Getting some token data is async, so we need to wait for the data to return, hence the promise\r\n      getBalanceAndSymbol(props.network.account, address, props.network.provider, props.network.signer, props.network.weth.address, props.network.coins).then((data) => {\r\n        setCoin2({\r\n          address: address,\r\n          symbol: data.symbol,\r\n          balance: data.balance,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Calls the swapTokens Ethereum function to make the swap, then resets nessicary state variables\r\n  const swap = () => {\r\n    console.log(\"Attempting to swap tokens...\");\r\n    setLoading(true);\r\n\r\n    if (approveIsRequired){\r\n      return approveToken(\r\n        coin1.address, \r\n        dogechainRouter, \r\n        props.network.signer\r\n      ).then(() => {\r\n        setLoading(false);\r\n        setApproveRequired(false);\r\n        enqueueSnackbar(\"Approved\", { variant: \"success\" });\r\n      }).catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Approve Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n    }\r\n\r\n    swapTokens(\r\n      coin1.address,\r\n      coin2.address,\r\n      field1Value,\r\n      props.network.router,\r\n      props.network.account,\r\n      props.network.signer\r\n    )\r\n      .then(() => {\r\n        setLoading(false);\r\n\r\n        // If the transaction was successful, we clear to input to make sure the user doesn't accidental redo the transfer\r\n        setField1Value(\"\");\r\n        enqueueSnackbar(\"Transaction Successful\", { variant: \"success\" });\r\n      })\r\n      .catch((e) => {\r\n        setLoading(false);\r\n        enqueueSnackbar(\"Transaction Failed (\" + e.message + \")\", {\r\n          variant: \"error\",\r\n          autoHideDuration: 10000,\r\n        });\r\n      });\r\n  };\r\n\r\n  // The lambdas within these useEffects will be called when a particular dependency is updated. These dependencies\r\n  // are defined in the array of variables passed to the function after the lambda expression. If there are no dependencies\r\n  // the lambda will only ever be called when the component mounts. These are very useful for calculating new values\r\n  // after a particular state change, for example, calculating the new exchange rate whenever the addresses\r\n  // of the two coins change.\r\n\r\n  // This hook is called when either of the state variables `coin1.address` or `coin2.address` change.\r\n  // This means that when the user selects a different coin to convert between, or the coins are swapped,\r\n  // the new reserves will be calculated.\r\n  useEffect(() => {\r\n    console.log(\r\n      \"Trying to get Reserves between:\\n\" + coin1.address + \"\\n\" + coin2.address\r\n    );\r\n\r\n    if (coin1.address && coin2.address) {\r\n      getReserves(coin1.address, coin2.address, props.network.factory, props.network.signer, props.network.account).then(\r\n        (data) => setReserves(data)\r\n      );\r\n    }\r\n  }, [coin1.address, coin2.address, props.network.account, props.network.factory, props.network.router, props.network.signer]);\r\n\r\n  // This hook is called when either of the state variables `field1Value` `coin1.address` or `coin2.address` change.\r\n  // It attempts to calculate and set the state variable `field2Value`\r\n  // This means that if the user types a new value into the conversion box or the conversion rate changes,\r\n  // the value in the output box will change.\r\n  useEffect(() => {\r\n    if (isNaN(parseFloat(field1Value))) {\r\n      setField2Value(\"\");\r\n    } else if (parseFloat(field1Value) && coin1.address && coin2.address) {\r\n      getAmountOut(coin1.address, coin2.address, field1Value, props.network.router, props.network.signer).then(\r\n        (amount) => {\r\n          setField2Value(amount.toFixed(7));\r\n\r\n          const inPoolSize = new BigNumber(ethers.utils.parseUnits(reserves[0], 18).toString());\r\n          const outPoolSize = new BigNumber(ethers.utils.parseUnits(reserves[1], 18).toString());\r\n          const inAmount = new BigNumber(ethers.utils.parseUnits(field1Value, 18).toString());\r\n\r\n          const proportionBefore = outPoolSize.div(inPoolSize);\r\n  \r\n          // console.log(`1 token per: [BEFORE] ${proportionBefore.toString()}`);\r\n\r\n          const constantProduct = inPoolSize.times(outPoolSize);\r\n\r\n          const inPoolSizeAfter = inPoolSize.plus(inAmount);\r\n          const outPoolSizeAfter = constantProduct.div(inPoolSizeAfter)\r\n\r\n          const proportionAfter = outPoolSizeAfter.div(inPoolSizeAfter);\r\n\r\n          // console.log(`1 token per [AFTER]: ${proportionAfter.toString()}`);\r\n\r\n          const differentAmount = proportionBefore.minus(proportionAfter);\r\n          const differentPersentage = differentAmount.div(proportionBefore).times(100);\r\n\r\n          setPriceImpact(differentPersentage.toFixed(2));\r\n\r\n          \r\n        }).catch(e => {\r\n          console.log(e);\r\n          setField2Value(\"NA\");\r\n      })\r\n    } else {\r\n      setField2Value(\"\");\r\n    }\r\n  }, [field1Value, coin1.address, coin2.address, reserves]);\r\n\r\n  // This hook creates a timeout that will run every ~10 seconds, it's role is to check if the user's balance has\r\n  // updated has changed. This allows them to see when a transaction completes by looking at the balance output.\r\n  useEffect(() => {\r\n    const coinTimeout = setTimeout(() => {\r\n      console.log('props: ', props);\r\n      console.log(\"Checking balances...\");\r\n\r\n      if (coin1.address && coin2.address && props.network.account) {\r\n        getReserves(\r\n          coin1.address,\r\n          coin2.address,\r\n          props.network.factory,\r\n          props.network.signer,\r\n          props.network.account\r\n        ).then((data) => setReserves(data));\r\n      }\r\n\r\n      if (coin1.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin1.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin1({\r\n              ...coin1,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n      if (coin2.address && props.network.account &&!wrongNetworkOpen) {\r\n        getBalanceAndSymbol(\r\n          props.network.account,\r\n          coin2.address,\r\n          props.network.provider,\r\n          props.network.signer,\r\n          props.network.weth.address,\r\n          props.network.coins\r\n          ).then(\r\n          (data) => {\r\n            setCoin2({\r\n              ...coin2,\r\n              balance: data.balance,\r\n            });\r\n          }\r\n        );\r\n      }\r\n    }, 10000);\r\n\r\n    return () => clearTimeout(coinTimeout);\r\n  });\r\n\r\n    useEffect(() => {\r\n    setCoin1(DOGE);\r\n    setCoin2(GRIMACE);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.allContainer}>\r\n      {/* Coin Swapper */}\r\n      <iframe \r\n          src=\"https://dexscreener.com/dogechain/0x1aAD352a2190B399Bb3cfD4d5E4B0bf6EFA33C0e?embed=1&theme=dark&trades=0&info=0\"\r\n          title=\"MyFrame\"\r\n          width=\"780px\"\r\n          height=\"650px\"  \r\n          className={classes.graph}           \r\n      ></iframe>\r\n      <Container maxWidth=\"xs\" className={classes.swapContainer}>\r\n        <Paper className={classes.paperContainer}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            Swap Coins\r\n          </Typography>\r\n\r\n          <Grid container direction=\"column\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={12} className={classes.fullWidth}>\r\n              <CoinField\r\n                activeField={true}\r\n                value={field1Value}\r\n                onClick={() => setDialog1Open(true)}\r\n                onChange={handleChange.field1}\r\n                symbol={coin1.symbol !== undefined ? coin1.symbol : \"Select\"}\r\n              />\r\n            </Grid>\r\n\r\n            <IconButton onClick={switchFields} className={classes.switchButton}>\r\n              <SwapVerticalCircleIcon fontSize=\"medium\" />\r\n            </IconButton>\r\n\r\n            <Grid item xs={12} className={classes.fullWidth}>\r\n              <CoinField\r\n                activeField={false}\r\n                value={field2Value}\r\n                onClick={() => setDialog2Open(true)}\r\n                symbol={coin2.symbol !== undefined ? coin2.symbol : \"Select\"}\r\n              />\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Balance Display */}\r\n            <Typography variant=\"h6\">Your Balances</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(coin1.balance, coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatBalance(coin2.balance, coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            {/* Reserves Display */}\r\n            <Typography variant=\"h6\">Reserves</Typography>\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(reserves[0], coin1.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {formatReserve(reserves[1], coin2.symbol)}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            {/* Price Impact Display */}\r\n            <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  Price Impact: \r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" className={classes.balance}>\r\n                  {priceImpact}%\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <hr className={classes.hr} />\r\n\r\n            <LoadingButton\r\n              loading={loading}\r\n              valid={isButtonEnabled()}\r\n              success={false}\r\n              fail={false}\r\n              onClick={swap}\r\n            >\r\n              <LoopIcon />\r\n              { approveIsRequired ? `Approve ${coin1.symbol}` : \"swap\" }\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CoinSwapper;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
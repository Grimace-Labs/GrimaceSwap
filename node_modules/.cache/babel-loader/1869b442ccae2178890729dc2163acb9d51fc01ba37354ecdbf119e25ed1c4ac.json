{"ast":null,"code":"var _jsxFileName = \"D:\\\\temki\\\\grimace\\\\GrimaceSwap\\\\src\\\\CoinSwapper\\\\CoinButton.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { ButtonBase, Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport * as COLORS from \"@material-ui/core/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    width: \"100%\",\n    paddingTop: theme.spacing(0.5),\n    paddingBottom: theme.spacing(0.5),\n    \"&:hover, &$focusVisible\": {\n      backgroundColor: COLORS.grey[200]\n    }\n  },\n  coinName: {\n    opacity: 0.6\n  }\n}));\nCoinButton.propTypes = {\n  coinName: PropTypes.string.isRequired,\n  coinAbbr: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\nexport default function CoinButton(props) {\n  _s();\n  const {\n    coinName,\n    coinAbbr,\n    onClick,\n    ...other\n  } = props;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(ButtonBase, {\n    focusRipple: true,\n    className: classes.button,\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: coinAbbr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        className: classes.coinName,\n        children: coinName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CoinButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = CoinButton;\nvar _c;\n$RefreshReg$(_c, \"CoinButton\");","map":{"version":3,"names":["React","ButtonBase","Grid","makeStyles","Typography","PropTypes","COLORS","jsxDEV","_jsxDEV","useStyles","theme","button","width","paddingTop","spacing","paddingBottom","backgroundColor","grey","coinName","opacity","CoinButton","propTypes","string","isRequired","coinAbbr","onClick","func","props","_s","other","classes","focusRipple","className","children","container","direction","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/temki/grimace/GrimaceSwap/src/CoinSwapper/CoinButton.js"],"sourcesContent":["import React from \"react\";\r\nimport { ButtonBase, Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as COLORS from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    width: \"100%\",\r\n    paddingTop: theme.spacing(0.5),\r\n    paddingBottom: theme.spacing(0.5),\r\n    \"&:hover, &$focusVisible\": {\r\n      backgroundColor: COLORS.grey[200],\r\n    },\r\n  },\r\n  coinName: {\r\n    opacity: 0.6,\r\n  },\r\n}));\r\n\r\nCoinButton.propTypes = {\r\n  coinName: PropTypes.string.isRequired,\r\n  coinAbbr: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function CoinButton(props) {\r\n  const { coinName, coinAbbr, onClick, ...other } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ButtonBase focusRipple className={classes.button} onClick={onClick}>\r\n      <Grid container direction=\"column\">\r\n        <Typography variant=\"h6\">{coinAbbr}</Typography>\r\n        <Typography variant=\"body2\" className={classes.coinName}>\r\n          {coinName}\r\n        </Typography>\r\n      </Grid>\r\n    </ButtonBase>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAEC,UAAU,QAAQ,mBAAmB;AAC5E,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,KAAKC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGN,UAAU,CAAEO,KAAK,KAAM;EACvCC,MAAM,EAAE;IACNC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAEH,KAAK,CAACI,OAAO,CAAC,GAAG,CAAC;IAC9BC,aAAa,EAAEL,KAAK,CAACI,OAAO,CAAC,GAAG,CAAC;IACjC,yBAAyB,EAAE;MACzBE,eAAe,EAAEV,MAAM,CAACW,IAAI,CAAC,GAAG;IAClC;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAE;EACX;AACF,CAAC,CAAC,CAAC;AAEHC,UAAU,CAACC,SAAS,GAAG;EACrBH,QAAQ,EAAEb,SAAS,CAACiB,MAAM,CAACC,UAAU;EACrCC,QAAQ,EAAEnB,SAAS,CAACiB,MAAM,CAACC,UAAU;EACrCE,OAAO,EAAEpB,SAAS,CAACqB,IAAI,CAACH;AAC1B,CAAC;AAED,eAAe,SAASH,UAAUA,CAACO,KAAK,EAAE;EAAAC,EAAA;EACxC,MAAM;IAAEV,QAAQ;IAAEM,QAAQ;IAAEC,OAAO;IAAE,GAAGI;EAAM,CAAC,GAAGF,KAAK;EACvD,MAAMG,OAAO,GAAGrB,SAAS,CAAC,CAAC;EAE3B,oBACED,OAAA,CAACP,UAAU;IAAC8B,WAAW;IAACC,SAAS,EAAEF,OAAO,CAACnB,MAAO;IAACc,OAAO,EAAEA,OAAQ;IAAAQ,QAAA,eAClEzB,OAAA,CAACN,IAAI;MAACgC,SAAS;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBAChCzB,OAAA,CAACJ,UAAU;QAACgC,OAAO,EAAC,IAAI;QAAAH,QAAA,EAAET;MAAQ;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAChDhC,OAAA,CAACJ,UAAU;QAACgC,OAAO,EAAC,OAAO;QAACJ,SAAS,EAAEF,OAAO,CAACZ,QAAS;QAAAe,QAAA,EACrDf;MAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEjB;AAACZ,EAAA,CAduBR,UAAU;EAAA,QAEhBX,SAAS;AAAA;AAAAgC,EAAA,GAFHrB,UAAU;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}